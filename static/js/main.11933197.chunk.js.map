{"version":3,"sources":["actions/index.js","components/Common/Header.js","components/Dashboard/HeaderContainer.js","components/Charts/ActiveIssues/ActiveIssues.js","components/Charts/ActiveIssues/ClosedIssues.js","components/Charts/ActiveIssues/OpenIssues.js","components/Charts/ActiveIssues/AllIssues.js","components/Charts/ActiveIssues/CloseRate.js","components/Charts/ActiveIssues/index.js","components/Charts/IssuesTypesChart.js","components/Charts/IssuesTypes.js","components/Charts/TypesDistribution.js","components/Dashboard/Statistics.js","lib/issues.js","components/Dashboard/ChartsContaner.js","components/Dashboard/index.js","components/Issues/IssuesContainer.js","components/Issues/IssuesGridCellTemplates.js","components/Issues/Markdown.js","components/Issues/IssuesGrid.js","components/Issues/IssuesGridContainer.js","components/Issues/index.js","components/Signin/index.js","components/Profile/index.js","components/Github/index.js","components/MainMenu/index.js","App.jsx","reducers/issues.js","reducers/issuesPaging.js","reducers/index.js","store/index.js","index.js"],"names":["periodChanged","period","type","payload","Header","changePeriod","e","months","target","value","_this","props","onPeriodChange","_this2","this","_this$props$range","range","from","to","formatedFrom","provideIntlService","formatDate","formatedTo","react_default","a","createElement","id","className","name","main","periods","map","p","key","selected","togglable","onClick","concat","Component","registerForIntl","HeaderContainer","connect","state","Object","objectSpread","issues","dispatch","ActiveIssues","seriesData","active","count","dist_es_main","style","height","background","data","line","field","categoryField","aggregate","stack","gap","overlay","color","baseUnit","majorGridLines","visible","majorTicks","labels","step","skip","font","ClosedIssues","closed","length","open","AllIssues","zoomable","opacity","border","rotation","margin","top","right","CloseRate","formatp","number","Intl","NumberFormat","navigator","language","format","formatd","date","Date","parseInt","toDateString","closeRate","average","highest","close_rate","created_at","lowest","marginLeft","bulletData","currentField","targetField","narrowRange","plotBands","ActiveIssuesDash","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelect","setState","_this$props","activeCount","current","Math","round","kendo_react_layout_dist_es_main","onSelect","animation","title","Charts_ActiveIssues_ActiveIssues","ActiveIssues_ClosedIssues","OpenIssues","ActiveIssues_CloseRate","ActiveIssues_AllIssues","React","IssuesTypesChart","init","event","seriesHover","hoverColor","point","options","donutPercent","donutLabel","category","currentState","pointIndex","undefined","nextProps","width","onSeriesHover","updateDonutLegend","bind","onLegendItemClick","updateSeries","transitions","donutCenterRender","holeSize","size","position","padding","orientation","IssuesTypes","didInit","sevlow","find","series","assertThisInitialized","Charts_IssuesTypesChart","TypesDistribution","seriesColors","label","mapSeries","markers","addSeries","initialGrey","visibleSeries","filter","s","button","b","categoryAxis","idx","chartOptions","valueAxis","Statistics","Charts_ActiveIssues","Charts_IssuesTypes","issuesTypes","Charts_TypesDistribution","typesDistribution","colors","SEV: LOW","SEV: MEDIUM","SEV: HIGH","ENHANCEMENT","FEATURE","OTHER","PASSED QA","BUG","NEEDS QA","DOCUMENTATION","DEMO","DELETED","IN PROGRESS","mapUser","user","login","avatarUrl","avatar_url","avatarUrlThumb","mapLabels","toUpperCase","mapIssue","issue","body","author","assignees","dateClosed","closed_at","milestone","assignee","reduce","acc","curr","groupLabels","flatten","item","low","medium","high","enhancement","feature","other","parseFloat","toFixed","distribution","setHours","cleanupLabels","push","Others","Enhancement","SEV: Low","SEV: Medium","SEV: High","Feature","rate","keys","closedKey","filtered","ChartsContainer","mappedIssues","_groupIssues","issuesPeriod","Dashboard","Dashboard_HeaderContainer","ChartsContaner","IssuesContainer","AssigneeCellTemplate","dataItem","src","alt","MilestoneCellTemplate","NumberCellTemplate","href","html_url","TitleCellTemplate","classes","join","LabelCellTemplate","backgroundColor","Markdown","react_markdown_default","source","input","RowDetailComponent","badgeClass","IssuesGridCellTemplates_LabelCellTemplate","Issues_Markdown","cellWithTemplate","_React$Component","_class","apply","arguments","inherits","createClass","IssuesGrid","kendo_react_grid_dist_es_main","detail","expandField","onExpandChange","onToggleExpand","onPageChange","onIssuesPageChange","total","scrollable","pageable","pageSize","overflow","cell","IssuesGridContainer","_state$issuesPaging","issuesPaging","take","periodStart","itemsInPeriod","getTime","issuesInRange","slice","paging","page","IssuesIndex","Issues_IssuesContainer","Issues_IssuesGridContainer","history","handleClick","preventDefault","InputLabel_default","Input_default","Button_default","Profile","showAskDelete","showProfileUpdate","isWithOverlay","onDeleteClick","onUpdateClick","url","gitUserApiUrl","gitOptions","fetch","then","response","json","prevState","_this3","variant","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","maxWidth","defaultValue","ref","anchor","email","FormControlLabel_default","control","Checkbox_default","defaultChecked","company","location","Switch_default","withGithubApi","ApiComponent","_Component","method","accept","headers","Authorization","gitBaseUrl","gitUsername","assign","MainMenu","year","getFullYear","notSignIn","pathname","navbarClassName","showNav","NavLink","activeClassName","Redirect","Route","path","component","_Component2","_class2","Signin","App","loading","Promise","all","getPageFetchers","responses","res","arraysOfData","prev","result","prevProps","numberOfPages","fetches","classNames","k-shadow","Fragment","data-toggle","data-target","aria-controls","components_MainMenu","getRangeStart","since","parsedMonths","setMonth","getMonth","getState","initialState","initialIssues","issuesDashboard","combineReducers","action","pull_request","newState","iss","expanded","index","findIndex","i","clonedDataItem","newIssues","toConsumableArray","newPeriod","issuesStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","AppWithRouting","withRouter","ReactDOM","render","es","store","kendo_react_ripple_dist_es_main","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.11933197.chunk.js","sourcesContent":["export const periodChanged = (period) => {\r\n    return {\r\n        type: 'ISSUES_PERIOD_CHANGED',\r\n        payload: period\r\n    }\r\n};\r\n\r\nexport const issuesReceived = (issues) => {\r\n    return {\r\n        type: 'ISSUES_RECEIVED',\r\n        payload: issues\r\n    }\r\n}\r\n\r\nexport const issuesToggleExpand = (issues) => {\r\n    return {\r\n        type: 'ISSUES_TOGGLE_EXPAND',\r\n        payload: issues\r\n    }\r\n}\r\n\r\nexport const issuesDetails = (issues) => {\r\n    return {\r\n        type: 'ISSUES_COLLAPSED',\r\n        payload: issues\r\n    }\r\n}\r\n\r\nexport const issuesFetched = () => {\r\n    return {\r\n        type: 'ISSUES_FETCHED'\r\n    }\r\n}\r\n\r\nexport const issuesPageChange = (paging) => {\r\n    return {\r\n        type: 'ISSUES_PAGE_CHANGE',\r\n        ...paging\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { ButtonGroup, Button } from '@progress/kendo-react-buttons';\nimport { registerForIntl, provideIntlService } from '@progress/kendo-react-intl';\n\nclass Header extends Component {\n    static periods = [\"3\", \"6\", \"12\"];\n\n    changePeriod = (e) => {\n        let months = e.target.value;\n        this.props.onPeriodChange({ period: months });\n    }\n\n    render() {\n        const { from, to } = this.props.range;\n        const formatedFrom = provideIntlService(this).formatDate(from, 'MMMM dd, yyyy');\n        const formatedTo = provideIntlService(this).formatDate(to, 'MMMM dd, yyyy');\n\n        return (\n            <div id=\"header\" className=\"row\">\n                <div className=\"col-sm\">\n                    <h4 className=\"d-block\">{this.props.name}</h4>\n                    <h2>\n                        {[formatedFrom, ' - ', formatedTo]}\n                    </h2>\n                </div>\n                <div className=\"col-sm text-sm-right p-0 p-sm-3\">\n                    <ButtonGroup className=\"justify-content-center\">\n                        {\n                            Header.periods.map(p => <Button\n                                key={p} value={p}\n                                selected={this.props.period === p}\n                                togglable={true}\n                                onClick={this.changePeriod}\n                            >{`${p} Months`}\n                            </Button>)\n                        }\n                    </ButtonGroup>\n                </div>\n            </div>\n        );\n    };\n}\n\nregisterForIntl(Header);\n\nexport default Header;\n","import Header from './../Common/Header';\n\nimport { connect } from 'react-redux';\nimport { periodChanged } from './../../actions';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onPeriodChange: period => {\n            dispatch(periodChanged(period));\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state.issues.period,\n        name: 'Statistics'\n    }\n}\n\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\nexport default HeaderContainer;\n","import React from 'react';\n\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartValueAxis,\n    ChartValueAxisItem,\n    ChartArea,\n    ChartTooltip\n} from '@progress/kendo-react-charts';\n\nconst ActiveIssues = (props) => {\n    const seriesData = props.active;\n    const categoryAxis = { baseUnit: 'months', majorGridLines: { visible: false }, majorTicks: { visible: false }, labels: { step: 4, skip: 2, font: '10px sans-serif' }, line: { visible: false } };\n\n    return (\n        <div className=\"col-sm-12 col-lg-6 col-xl active-issues\" >\n            <div className=\"comp-label\">\n                <div className=\"issues-count\">{props.count}</div>\n                <div className=\"issues-label\">Active issues</div>\n            </div>\n            <Chart style={{ height: '80px' }}>\n                <ChartTooltip />\n                <ChartArea background={\"white\"} />\n                <ChartSeries>\n                    <ChartSeriesItem data={seriesData} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} gap={0.5} overlay={false} color=\"#888\" />\n                </ChartSeries>\n                <ChartCategoryAxis>\n                    <ChartCategoryAxisItem {...categoryAxis} />\n                </ChartCategoryAxis>\n                <ChartValueAxis>\n                    <ChartValueAxisItem visible={false} majorGridLines={{ visible: false }} />\n                </ChartValueAxis>\n            </Chart>\n        </div>\n    );\n}\n\nexport default ActiveIssues;\n","import React from 'react';\r\nimport {\r\n    Chart,\r\n    ChartSeries,\r\n    ChartSeriesItem,\r\n    ChartCategoryAxis,\r\n    ChartCategoryAxisItem,\r\n    ChartValueAxis,\r\n    ChartValueAxisItem,\r\n    ChartArea,\r\n    ChartTooltip,\r\n} from '@progress/kendo-react-charts';\r\n\r\nconst ClosedIssues = (props) => {\r\n    const seriesData = props.closed\r\n    const categoryAxis = { baseUnit: 'months', majorGridLines: { visible: false }, majorTicks: { visible: false }, labels: { step: 4, skip: 2, font: '10px sans-serif' }, line: { visible: false } };\r\n    return (\r\n        <div className=\"col-12 col-lg-6 col-xl pb-4 text-danger closed-issues\">\r\n            <div className=\"comp-label\">\r\n                <div className=\"issues-count\">{props.closed.length}</div>\r\n                <div className=\"issues-label\">Closed issues</div>\r\n            </div>\r\n            <Chart style={{ height: '80px' }}>\r\n                <ChartArea background={\"white\"} />\r\n                <ChartTooltip />\r\n                <ChartSeries>\r\n                    <ChartSeriesItem data={seriesData} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} gap={0.5} overlay={false} color={\"#e91e63\"} />\r\n                </ChartSeries>\r\n                <ChartCategoryAxis>\r\n                    <ChartCategoryAxisItem {...categoryAxis} />\r\n                </ChartCategoryAxis>\r\n                <ChartValueAxis>\r\n                    <ChartValueAxisItem visible={false} majorGridLines=\"{ visible: false }}\" />\r\n                </ChartValueAxis>\r\n            </Chart>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClosedIssues;","import React from 'react';\r\nimport {\r\n    Chart,\r\n    ChartSeries,\r\n    ChartSeriesItem,\r\n    ChartCategoryAxis,\r\n    ChartCategoryAxisItem,\r\n    ChartValueAxis,\r\n    ChartValueAxisItem,\r\n    ChartArea,\r\n    ChartTooltip\r\n} from '@progress/kendo-react-charts';\r\n\r\nconst ClosedIssues = (props) => {\r\n    const seriesData = props.open\r\n    const categoryAxis = { baseUnit: 'months', majorGridLines: { visible: false }, majorTicks: { visible: false }, labels: { step: 4, skip: 2, font: '10px sans-serif' }, line: { visible: false } };\r\n    return (\r\n        <div className=\"col-12 col-lg-6 col-xl pb-4 text-success closed-issues\">\r\n            <div className=\"comp-label\">\r\n                <div className=\"issues-count\">{props.open.length}</div>\r\n                <div className=\"issues-label\">Open issues</div>\r\n            </div>\r\n            <Chart style={{ height: '80px' }}>\r\n                <ChartTooltip />\r\n                <ChartArea background={\"white\"} />\r\n                <ChartSeries>\r\n                    <ChartSeriesItem data={seriesData} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} gap={0.5} overlay={false} color={\"#27c46d\"} />\r\n                </ChartSeries>\r\n                <ChartCategoryAxis>\r\n                    <ChartCategoryAxisItem {...categoryAxis} />\r\n                </ChartCategoryAxis>\r\n                <ChartValueAxis>\r\n                    <ChartValueAxisItem visible={false} majorGridLines=\"{ visible: false }}\" />\r\n                </ChartValueAxis>\r\n            </Chart>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClosedIssues;","import React from 'react';\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartValueAxis,\n    ChartValueAxisItem,\n    ChartArea,\n    ChartTooltip\n} from '@progress/kendo-react-charts';\n\nconst AllIssues = (props) => {\n    const categoryAxis = {\n        baseUnit: 'months',\n        majorTicks: { visible: false },\n        majorGridLines: { visible: false },\n        labels: { rotation: 'auto', margin: { top: 8 } },\n        line: { visible: false }\n    };\n\n    const valueAxis = {\n        line: { visible: false },\n        labels: { step: 2, skip: 2, margin: { right: 4 } },\n        majorGridLines: { step: 2, skip: 2, color: '#F0F2F2' }\n    };\n\n    return (\n        <div className=\"col-12 all-issues\">\n            <Chart style={{ height: '320px' }} zoomable={false}>\n                <ChartTooltip />\n                <ChartArea background={\"white\"} />\n                <ChartSeries>\n                    <ChartSeriesItem data={props.open} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} opacity={0.3} gap={0.06} overlay={false} color={\"#27c46d\"} border={\"color: '#27c46d', opacicty: 0.3\"} />\n                    <ChartSeriesItem data={props.closed} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} opacity={0.3} gap={0.06} overlay={false} color={\"#e91e63\"} border={\"color: '#e91e63', opacicty: 0.3\"} />\n                </ChartSeries>\n                <ChartCategoryAxis>\n                    <ChartCategoryAxisItem {...categoryAxis} />\n                </ChartCategoryAxis>\n                <ChartValueAxis>\n                    <ChartValueAxisItem {...valueAxis} />\n                </ChartValueAxis>\n            </Chart>\n        </div>\n    );\n}\n\nexport default AllIssues;\n","import React from 'react';\r\nimport {\r\n    Chart,\r\n    ChartSeries,\r\n    ChartSeriesItem,\r\n    ChartValueAxis,\r\n    ChartValueAxisItem,\r\n    ChartArea,\r\n    ChartTooltip\r\n} from '@progress/kendo-react-charts';\r\n\r\nconst CloseRate = (props) => {\r\n    const formatp = (number) => {\r\n        return Intl.NumberFormat(navigator.language, { style: 'percent' }).format(number);\r\n    };\r\n\r\n    const formatd = (date) => {\r\n        if (!date) {\r\n            return '';\r\n        }\r\n        return new Date(parseInt(date, 10)).toDateString();\r\n    }\r\n\r\n    const closeRatePlotBands = [{ from: 0, to: 100, color: \"#27c46d\" }]\r\n\r\n    return (\r\n        <div className=\"col-12 col-lg-6 col-xl pb-4 close-rate\">\r\n            <div className=\"comp-label\">\r\n                <div className=\"issues-count\">{formatp(props.closeRate.average)}</div>\r\n                <div className=\"issues-label\">Close rate</div>\r\n            </div>\r\n\r\n            <p className=\"m-0 small text-uppercase text-muted\">\r\n                Highest:\r\n                {formatp(props.closeRate.highest.close_rate)}\r\n                on {formatd(props.closeRate.highest.created_at)}\r\n            </p>\r\n            <p className=\"m-0 small text-uppercase text-muted\">\r\n                Lowest:\r\n                {formatp(props.closeRate.lowest.close_rate)}\r\n                on {formatd(props.closeRate.lowest.created_at)}\r\n            </p>\r\n            <Chart style={{ height: '30px', marginLeft: \"-15px\" }}>\r\n                <ChartTooltip />\r\n                <ChartArea background={\"white\"} />\r\n                <ChartSeries>\r\n                    <ChartSeriesItem data={props.bulletData} gap={0} type=\"bullet\" currentField=\"current\" targetField=\"target\" color=\"#e91e63\" target={{ color: \"#FFF\" }} />\r\n                </ChartSeries>\r\n                <ChartValueAxis>\r\n                    <ChartValueAxisItem narrowRange={false} plotBands={closeRatePlotBands} visible={false} majorGridLines={{ visible: false }} />\r\n                </ChartValueAxis>\r\n            </Chart>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CloseRate;","import React from 'react';\nimport ActiveIssues from './ActiveIssues';\nimport ClosedIssues from './ClosedIssues';\nimport OpenIssues from './OpenIssues';\nimport AllIssues from './AllIssues';\nimport CloseRate from './CloseRate';\nimport { TabStrip, TabStripTab } from '@progress/kendo-react-layout';\n\nclass ActiveIssuesDash extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: 0\n        }\n    }\n    handleSelect = (e) => {\n        this.setState({ selected: e.selected })\n    }\n\n    render() {\n        const { open, closed, active } = this.props;\n        const activeCount = open.length + closed.length;\n        const bulletData = [{ target: 70, current: Math.round(this.props.closeRate.average * 100) }]\n        return (\n            <div className=\"k-card\">\n                <h2 className=\"k-card-header m-0\">Active Issues</h2>\n                <div className=\"k-card-body\">\n                    <TabStrip selected={this.state.selected} onSelect={this.handleSelect} animation={false}>\n                        <TabStripTab title=\"All Issues\">\n                            <div className=\"row\">\n                                <ActiveIssues active={active} count={activeCount} />\n                                <ClosedIssues closed={closed} />\n                                <OpenIssues open={open} />\n                                <CloseRate closeRate={this.props.closeRate} bulletData={bulletData} />\n                            </div>\n                            <div className=\"row\">\n                                <AllIssues open={open} closed={closed} />\n                            </div>\n                        </TabStripTab>\n                        <TabStripTab title=\"Assigned to Me\">\n                            <div className=\"row\">\n                                <ActiveIssues active={active} count={activeCount} />\n                                <ClosedIssues closed={closed} />\n                                <OpenIssues open={open} />\n                                <CloseRate closeRate={this.props.closeRate} bulletData={bulletData} />\n                            </div>\n                            <div className=\"row\">\n                                <AllIssues open={open} closed={closed} />\n                            </div>\n                        </TabStripTab>\n                        <TabStripTab title=\"Created by Me\">\n\n                            <div className=\"row\">\n                                <ActiveIssues active={active} count={activeCount} />\n                                <ClosedIssues closed={closed} />\n                                <OpenIssues open={open} />\n                                <CloseRate closeRate={this.props.closeRate} bulletData={bulletData} />\n                            </div>\n                            <div className=\"row\">\n                                <AllIssues open={open} closed={closed} />\n                            </div>\n                        </TabStripTab>\n                    </TabStrip>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default ActiveIssuesDash;\n","import React, { Component } from 'react';\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartLegend\n} from '@progress/kendo-react-charts';\nimport 'hammerjs';\n\n\nclass IssuesTypesChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: true,\n            data: this.props.data\n        }\n    }\n\n    updateDonutLegend(event) {\n        this.setState({\n            init: false\n        });\n        this.props.seriesHover({\n            hoverColor: event.point.options.color,\n            donutPercent: Math.round(event.value * 100 || 0),\n            donutLabel: event.category\n        });\n    }\n\n    updateSeries(event) {\n        let currentState = this.state.data;\n\n        currentState[event.pointIndex].visible = currentState[event.pointIndex].visible === undefined\n            ? false\n            : !currentState[event.pointIndex].visible;\n\n        this.setState({\n            data: currentState,\n            init: true\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            data: nextProps.data\n        })\n    }\n\n    render() {\n        const labels = { font: '1em Roboto, Arial, sans-serif', padding: 5 };\n        const border = { color: 'white', width: 1 };\n\n        return (\n            <Chart\n                style={{ width: '100%', height: '400px' }}\n                onSeriesHover={this.updateDonutLegend.bind(this)}\n                onLegendItemClick={this.updateSeries.bind(this)}\n                transitions={false}\n                donutCenterRender={this.props.donutCenterRender}\n            >\n                <ChartSeries>\n                    <ChartSeriesItem\n                        border={border}\n                        holeSize={100}\n                        data={this.state.data}\n                        size= {15}\n                        type=\"donut\"\n                        field=\"value\"\n                        categoryField=\"type\"\n                        overlay={false}\n                    />\n                </ChartSeries>\n                <ChartLegend position=\"bottom\" labels={labels} orientation=\"horizontal\" padding={2} />\n            </Chart>\n        );\n    }\n}\n\nexport default IssuesTypesChart;\n","import React, { Component } from 'react';\nimport IssuesTypeChart from './IssuesTypesChart';\n\nclass IssuesTypes extends Component {\n    didInit = false;\n    constructor(props) {\n        super(props);\n\n        let sevlow = props.data.find(series => series.type === 'SEV: LOW');\n\n        this.state = {\n            value: sevlow.value,\n            category: sevlow.type,\n            point: {\n                options: {\n                    color: 'rgb(255, 99, 88)'\n                }\n            },\n            donutLabel: sevlow.type,\n            donutPercent: Math.round(sevlow.value * 100 || 0),\n            hoverColor: 'rgb(252, 81, 8)'\n        }\n\n        this.seriesHover = this.seriesHover.bind(this);\n    }\n\n    seriesHover(event) {\n        this.setState(event);\n    }\n    componentWillReceiveProps(props) {\n        if (props.data.find(series => series.type === this.state.category).value !== this.state.value) {\n            let sevlow = props.data.find(series => series.type === 'SEV: LOW');\n            this.setState({\n                value: sevlow.value,\n                donutPercent: Math.round(sevlow.value * 100 || 0),\n            })\n            this.didInit = true;\n        }\n    }\n    donutCenterRender = (e) => {\n        return (<div className=\"comp-label chart-label\" style={{ color: this.state.hoverColor }}>\n            <div className=\"issues-count\">{this.state.donutPercent} <span className=\"percentage\">%</span></div>\n            <div className=\"issues-label\">{this.state.donutLabel}</div>\n        </div>)\n    }\n\n    render() {\n        return (\n            <div className=\"k-card\">\n                <h2 className=\"k-card-header\">Issue Types</h2>\n                <div className=\"k-card-body height-1\">\n                    <div className=\"issue-types\">\n                        <IssuesTypeChart data={this.props.data} seriesHover={this.seriesHover} donutCenterRender={this.donutCenterRender} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default IssuesTypes;\n","import React, { Component } from 'react';\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartValueAxis,\n    ChartValueAxisItem,\n    ChartArea,\n    ChartTooltip\n} from '@progress/kendo-react-charts';\n\nclass TypesDistribution extends Component {\n    seriesColors = [\n        { label: \"SEV: Low\", value: \"#FF9966\", active: true },\n        { label: \"SEV: Medium\", value: \"#BB6ACB\", active: false },\n        { label: \"SEV: High\", value: \"#52C3D3\", active: false },\n        { label: \"Enhancement\", value: \"#22C85D\", active: true },\n        { label: \"Feature\", value: \"#FF6358\", active: false },\n        { label: \"Others\", value: \"#2BA7DA\", active: true }\n    ];\n    constructor(props) {\n        super(props);\n        this.data = props.data;\n        this.addSeries = this.addSeries.bind(this);\n        this.state = {\n            initialGrey: '#A2ACAC',\n            visibleSeries: this.seriesColors.filter(s => s.active).map(this.mapSeries),\n            seriesColors: this.seriesColors,\n            mapSeries: this.mapSeries\n        };\n    }\n    componentWillReceiveProps(props) {\n        this.data = props.data\n        this.setState({\n            visibleSeries: this.seriesColors.filter(s => s.active).map(this.state.mapSeries),\n        })\n    }\n\n    mapSeries = ((series) => {\n        return {\n            color: series.value,\n            markers: { visible: false },\n            data: this.data[series.label]\n        };\n    })\n\n    addSeries(button) {\n        let seriesColors = this.state.seriesColors.map(b => { if (button.value === b.value) { b.active = !b.active } return b; });\n        let visibleSeries = seriesColors.filter(s => s.active).map(this.state.mapSeries)\n\n        this.setState({ seriesColors, visibleSeries });\n    }\n\n    render() {\n        const categoryAxis = { baseUnit: 'months', majorTicks: { visible: false }, labels: { step: 4, skip: 2 }, majorGridLines: { visible: false }, line: { visible: false } };\n        const series = this.state.visibleSeries.map((series, idx) => {\n\n            const chartOptions = {\n                type: 'line',\n                key: idx,\n                overlay: false,\n                data: series.data,\n                markers: series.markers,\n                color: series.color,\n                style: 'smooth',\n                aggregate: 'count',\n                categoryField: 'date'\n            }\n            return <ChartSeriesItem {...chartOptions} />\n        });\n        const valueAxis = { line: { visible: false }, labels: { step: 2, skip: 2 }, majorGridLines: { step: 2, skip: 2, color: '#F0F2F2' } };\n\n        return (\n            <div className=\"k-card\">\n                <h2 className=\"k-card-header\">Types Distribution</h2>\n                <div className=\"k-card-body height-1\">\n                    <div className=\"row\">\n                        {\n                            this.state.seriesColors.map(button =>\n                                <div\n                                    onClick={() => { this.addSeries(button) }}\n                                    key={button.label}\n                                    style={{ color: button.active ? button.value : this.state.initialGrey }}\n                                    className=\"col-6 col-sm-4 col-xl-2 comp-label label-clickable\"\n                                >\n                                    <div className=\"issues-count\">{this.props.data[button.label].length}</div>\n                                    <div className=\"issues-label\">{button.label}</div>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 types-distribution\">\n                            <Chart style={{ height: '300px' }}\n                                transitions={false}\n                                categoryAxis={categoryAxis}\n                                valueAxis={valueAxis}\n                            >\n                                <ChartTooltip />\n                                <ChartArea background={\"white\"} />\n                                <ChartSeries>\n                                    {series}\n                                </ChartSeries>\n                                <ChartValueAxis>\n                                    <ChartValueAxisItem {...valueAxis} />\n                                </ChartValueAxis>\n                                <ChartCategoryAxis>\n                                    <ChartCategoryAxisItem {...categoryAxis} />\n                                </ChartCategoryAxis>\n                            </Chart>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TypesDistribution;\n","import React from 'react';\nimport ActiveIssuesDash from './../Charts/ActiveIssues';\nimport IssuesTypes from './../Charts/IssuesTypes';\nimport TypesDistribution from './../Charts/TypesDistribution';\n\nclass Statistics extends React.Component {\n    render() {\n        return (\n            <div id=\"statistics\" className=\"row\">\n                <div className=\"col-12 \">\n                    <ActiveIssuesDash {...this.props} />\n                </div>\n                <div className=\"col-xl-4\">\n                    <IssuesTypes data={this.props.issuesTypes} />\n                </div>\n                <div className=\"col-xl-8\">\n                    <TypesDistribution data={this.props.typesDistribution} months=\"months\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n","export const issuesInRange = (issue, from) => {\r\n    return (new Date(issue.created_at).getTime() > from.getTime());\r\n}\r\n\r\nconst colors = {\r\n    'SEV: LOW': '#ff9800',\r\n    'SEV: MEDIUM': '#ff5d2a',\r\n    'SEV: HIGH': '#d50000',\r\n    'ENHANCEMENT': '#00c853',\r\n    'FEATURE': '#2e7d32',\r\n    'OTHER': '#1ca8dd',\r\n    'PASSED QA': '#57b45b',\r\n    'BUG': '#cf3257',\r\n    'NEEDS QA': '#bc007c',\r\n    'DOCUMENTATION': '#455a64',\r\n    'DEMO': '#673ab7',\r\n    'DELETED': '#f44336',\r\n    'IN PROGRESS': '#ffd600'\r\n  };\r\n\r\n\r\nconst mapUser = (user) => {\r\n    return {\r\n        id: user.id,\r\n        name: user.login,\r\n        avatarUrl: user.avatar_url,\r\n        avatarUrlThumb: user.avatar_url + \"&size=60\"\r\n    };\r\n}\r\n\r\nconst mapLabels = (label) => {\r\n    const name = label.name.toUpperCase();\r\n\r\n    if (name in colors) {\r\n        label.color = colors[name];\r\n    } else {\r\n        label.color = colors[\"OTHER\"];\r\n    }\r\n\r\n    return label;\r\n}\r\n\r\nexport const mapIssue = (issue) => {\r\n    return {\r\n      id: issue.number,\r\n      title: issue.title,\r\n      body: issue.body,\r\n      author: mapUser(issue.user),\r\n      assignees: (issue.assignees ? issue.assignees.map(mapUser) : []),\r\n      state: issue.state,\r\n      date: new Date(issue.created_at),\r\n      dateClosed: (issue.closed_at ? new Date(issue.closed_at) : undefined),\r\n      count: 1,\r\n      labels: issue.labels.map(mapLabels),\r\n      milestone: issue.milestone,\r\n      created_at: issue.created_at,\r\n      assignee: issue.assignee ? issue.assignee.login : 'none'\r\n    };\r\n}\r\n\r\nconst flatten = (data) => {\r\n    return data.reduce((acc, curr) => acc.concat(curr), []);\r\n}\r\n\r\nconst aggregate = (data, field) => {\r\n    return data.reduce((acc, curr) => {\r\n      acc[curr[field]] = (acc[curr[field]] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\nexport const groupIssues= (data)=> {\r\n    return data.reduce((acc, curr) => {\r\n      acc[curr.state].push(curr);\r\n      return acc;\r\n    }, { open: [], closed: [] });\r\n}\r\n\r\nexport const groupLabels = (data) => {\r\n    const labels = aggregate(flatten(data.map(item => item.labels)), 'name');\r\n    const low = (labels['SEV: Low'] / data.length);\r\n    const medium = labels['SEV: Medium'] / data.length;\r\n    const high = labels['SEV: High'] / data.length;\r\n    const enhancement = labels['Enhancement'] / data.length;\r\n    const feature = labels['Feature'] / data.length;\r\n    const other = 1 - low - medium - high - enhancement - feature;\r\n\r\n    return [\r\n      { type: 'SEV: LOW', value: parseFloat(low.toFixed(2)) },\r\n      { type: 'SEV: MEDIUM', value: parseFloat(medium.toFixed(2)) },\r\n      { type: 'SEV: HIGH', value: parseFloat(high.toFixed(2)) },\r\n      { type: 'ENHANCEMENT', value: parseFloat(enhancement.toFixed(2)) },\r\n      { type: 'FEATURE', value: parseFloat(feature.toFixed(2)) },\r\n      { type: 'OTHER', value: parseFloat(other.toFixed(2)) }\r\n    ];\r\n}\r\n\r\nexport const distribution = (data) => {\r\n    let foo = data.map(item => ({\r\n      created_at: new Date(item.created_at).setHours(0, 0, 0, 0),\r\n      label: cleanupLabels(item.labels)\r\n    }))\r\n      .reduce((acc, curr) => {\r\n        acc[curr.label].push({\r\n          date: new Date(curr.created_at),\r\n          value: 1\r\n        });\r\n        return acc;\r\n      }, { Others: [], Enhancement: [], 'SEV: Low': [], 'SEV: Medium': [], 'SEV: High': [], 'Feature': [] });\r\n      return foo;\r\n}\r\n\r\n\r\nexport const closeRate = (data) => {\r\n    const closed = aggregate(data.closed.map(item => ({\r\n      created_at: new Date(item.created_at).setHours(0, 0, 0, 0)\r\n    })), 'created_at');\r\n\r\n    const open = aggregate(data.open.map(item => ({\r\n      created_at: new Date(item.created_at).setHours(0, 0, 0, 0)\r\n    })), 'created_at');\r\n\r\n    const rate = Object.keys(closed).map(key => {\r\n      const closedKey = closed[key] || 0;\r\n      const openKey = open[key] || 0;\r\n      const closeRate = closedKey / (closedKey + openKey);\r\n      return {\r\n        created_at: key,\r\n        close_rate: closeRate\r\n      };\r\n    });\r\n    return {\r\n      lowest: rate.reduce((acc, curr) => acc.close_rate < curr.close_rate ? acc : curr, []),\r\n      highest: rate.reduce((acc, curr) => acc.close_rate > curr.close_rate ? acc : curr, []),\r\n      average: data.closed.length / (data.open.length + data.closed.length) || 0\r\n    };\r\n  }\r\n\r\nconst cleanupLabels = (labels) => {\r\n    let filtered = labels.filter(label =>\r\n      label.name === 'SEV: Low' ||\r\n      label.name === 'SEV: High' ||\r\n      label.name === 'Feature' ||\r\n      label.name === 'Enhancement' ||\r\n      label.name === 'SEV: Medium')\r\n      .map(label => label.name);\r\n    return filtered.length === 0 ? 'Others' : filtered[0];\r\n}","import Statistics from './Statistics';\r\nimport { mapIssue, groupLabels, distribution, groupIssues, closeRate } from './../../lib/issues';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    const mappedIssues = state.issues.data.map(mapIssue);\r\n    const { open, closed } = groupIssues(mappedIssues);\r\n\r\n    return {\r\n        open: open,\r\n        closed: closed,\r\n        months: state.issuesPeriod,\r\n        issuesTypes: groupLabels(mappedIssues),\r\n        typesDistribution: distribution(mappedIssues),\r\n        active: mappedIssues,\r\n        closeRate: closeRate({open: open, closed: closed})\r\n    };\r\n}\r\n\r\nconst ChartsContainer = connect(mapStateToProps)(Statistics);\r\nexport default ChartsContainer;","import React, { Component } from 'react';\nimport HeaderContainer from './HeaderContainer';\nimport ChartsContaner from './ChartsContaner';\n\nclass Dashboard extends Component {\n    static periods = [\"3\",\"6\",\"12\"];\n\n    render() {\n        return (\n            <div className=\"container-fluid\" id=\"dashboard\">\n                <HeaderContainer />\n                <ChartsContaner />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import Header from './../Common/Header';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { periodChanged } from './../../actions';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onPeriodChange: period => {\r\n            dispatch(periodChanged(period));\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.issues.period,\r\n        name: 'Issues'\r\n    }\r\n}\r\n\r\nconst IssuesContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\r\nexport default IssuesContainer;\r\n","import React from 'react';\r\n\r\nexport const AssigneeCellTemplate = (props) => {\r\n    if (!props.dataItem.assignee) {\r\n        return '';\r\n    }\r\n    let assignee = props.dataItem.assignee;\r\n     // eslint-disable-next-line\r\n    let template = <label><img src={assignee.avatar_url} style={{width: '30px', height: '30px'}} alt='img-circle' className='img-circle' />{assignee.login}</label>\r\n    return template;\r\n}\r\n\r\nexport const MilestoneCellTemplate = (props) => {\r\n    return props.dataItem.milestone ? props.dataItem.milestone.title : '';\r\n}\r\n\r\nexport const NumberCellTemplate = (props) => {\r\n    return <a href={props.dataItem.html_url}>#{props.dataItem.number}</a>\r\n}\r\n\r\nexport const TitleCellTemplate = (props) => {\r\n    let classes = [props.dataItem.state === 'open' ? 'issue-open': 'issue-closed', 'issue-status'].join(' ');\r\n    return <span><span className={classes}></span>{props.dataItem.title}</span>\r\n}\r\n\r\nexport const LabelCellTemplate = (props) => {\r\n    let colors = {\r\n        'SEV: LOW' : '#ff9800',\r\n        'SEV: MEDIUM' : '#ff5d2a',\r\n        'SEV: HIGH' : '#d50000',\r\n        'ENHANCEMENT' : '#00c853',\r\n        'FEATURE' : '#2e7d32',\r\n        'OTHER' : '#1ca8dd',\r\n        'PASSED QA' : '#57b45b',\r\n        'BUG' : '#cf3257',\r\n        'NEEDS QA' : '#bc007c',\r\n        'DOCUMENTATION' : '#455a64',\r\n        'DEMO' : '#673ab7',\r\n        'DELETED' : '#f44336',\r\n        'IN PROGRESS' : '#ffd600'\r\n    };\r\n    return props.dataItem.labels.map(label => {\r\n            let color = colors[label.name.toUpperCase()] || colors.OTHER;\r\n\r\n            return <span key={label.name} className=\"badge\" style={{ backgroundColor: color }}>\r\n                    {label.name}\r\n                   </span>\r\n    });\r\n}","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst Markdown = (props) => {\r\n    return <ReactMarkdown source={props.input} />\r\n}\r\nexport default Markdown;","import React from 'react';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport { LabelCellTemplate, TitleCellTemplate, NumberCellTemplate, MilestoneCellTemplate, AssigneeCellTemplate } from './IssuesGridCellTemplates.js';\nimport Markdown from './Markdown.js';\n\nconst IssuesGrid = (props) => {\n    return (\n        <Grid\n            data={props.issues}\n            detail={RowDetailComponent}\n            expandField=\"expanded\"\n            onExpandChange={props.onToggleExpand}\n            onPageChange={props.onIssuesPageChange}\n            total={props.total}\n            skip={props.skip}\n            scrollable={'none'}\n            pageable={true}\n            pageSize={props.pageSize}\n            style={{width: '100%', overflow: 'auto'}}\n        >\n            <Column field=\"number\" title=\"ID\" width=\"80px\" cell={cellWithTemplate(NumberCellTemplate)} />\n            <Column field=\"title\" title=\"Title\" cell={cellWithTemplate(TitleCellTemplate)} />\n            <Column field=\"labels\" title=\"Labels\" cell={cellWithTemplate(LabelCellTemplate)} />\n            <Column field=\"milestone\" title=\"Milestone\" width=\"200px\" cell={cellWithTemplate(MilestoneCellTemplate)} />\n            <Column field=\"assignee\" title=\"Assignee\" width=\"200px\" cell={cellWithTemplate(AssigneeCellTemplate)} />\n        </Grid>\n    );\n}\n\nconst RowDetailComponent = (props) => {\n    let dataItem = props.dataItem;\n    let badgeClass = dataItem.state === 'open' ? 'badge-success' : 'badge-danger';\n    return (\n        <div>\n            <div className=\"row my-4\">\n                <div className=\"col-sm-12\">\n                    <span className={`badge ${badgeClass}`}>{dataItem.state}</span>\n                    <h3 className=\"h1\">\n                        {dataItem.title}\n                        <span className=\"text-muted\">#{dataItem.number}</span>\n                    </h3>\n                </div>\n            </div>\n            <div className=\"row my-4\">\n                <div className=\"col-sm-2\">\n                    <span className=\"small d-block text-muted\">Created on</span>\n                    {dataItem.created_at}\n                </div>\n                {dataItem.closed_at !== null ?\n                    (<div className=\"col-sm-2\">\n                        <span className=\"small d-block text-muted\">Closed on</span>\n                        {dataItem.closed_at}\n                    </div>)\n                    : null}\n                <div className=\"col-sm-2\">\n                    <span className=\"small d-block text-muted\">Milestone</span>\n                    {dataItem.milestone ? dataItem.milestone.title : ''}\n                </div>\n                <div className=\"col-sm-2\">\n                    <span className=\"small d-block text-muted\">Author</span>\n                    {dataItem.user.login}\n                </div>\n                {dataItem.assignee !== null ?\n                    (<div className=\"col-sm-2\">\n                        <span className=\"small d-block text-muted\">Assignee</span>\n                        <img alt=\"assignee\" src={dataItem.assignee ? dataItem.assignee.avatar_url : undefined} style={{ 'width': '30px', 'height': '30px' }} className=\"img-circle\" />\n                        {dataItem.assignee ? dataItem.assignee.login : ''}\n                    </div>)\n                    : null}\n            </div>\n            <div className=\"row my-4\">\n                <div className=\"col-sm-2\">\n                    <h4 className=\"small text-muted\">Labels</h4>\n                    <LabelCellTemplate dataItem={dataItem} />\n                </div>\n                <div className=\"col-sm-8\">\n                    <h4 className=\"small text-muted\">Description</h4>\n                    <Markdown input={dataItem.body} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst cellWithTemplate = (Component) => {\n    return class extends React.Component {\n        render() {\n            return (<td><Component {...this.props} /></td>);\n        }\n    }\n}\n\nexport default IssuesGrid;\n","import IssuesGrid from './IssuesGrid.js';\n\nimport { connect } from 'react-redux';\nimport { issuesToggleExpand, issuesPageChange } from './../../actions';\n\nimport { issuesInRange } from './../../lib/issues';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onToggleExpand: (e) => dispatch(issuesToggleExpand(e.dataItem)),\n        onIssuesPageChange: (e) => dispatch(issuesPageChange(e.page))\n    };\n}\n\nconst mapStateToProps = (state) => {\n    let { skip, take } = state.issuesPaging;\n    let periodStart = state.issues.period.range.from;\n    let itemsInPeriod = state.issues.data.filter(issue => issuesInRange(issue, periodStart));\n    let items = itemsInPeriod.slice(skip, skip + take);\n    let total = itemsInPeriod.length;\n\n    return {\n        issues: items,\n        skip,\n        take,\n        total: total,\n        pageSize: take\n    }\n}\n\nconst IssuesGridContainer = connect(mapStateToProps, mapDispatchToProps)(IssuesGrid);\nexport default IssuesGridContainer;\n","import React, { Component } from 'react';\n\nimport IssuesContainer from './IssuesContainer';\nimport IssuesGridContainer from './IssuesGridContainer';\n\nclass IssuesIndex extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid\" id=\"issues\">\n                <IssuesContainer />\n                <IssuesGridContainer />\n            </div>\n        );\n    };\n}\n\nexport default IssuesIndex;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nclass Dashboard extends Component {\n    login = () => {\n        this.props.history.push('dashboard');\n    }\n    handleClick = (event) => {\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div id=\"login\" className=\"justify-content-center\">\n                <div className=\"signin-form col-xl-3\">\n                    <div className=\"k-card\">\n                        <div className=\"k-card-block\">\n                            <form className=\"k-form\">\n                                <h1 id=\"app-title\" className=\"mb-0\">Issues</h1>\n                                <h4 id=\"app-subtitle\" className=\"mb-4\">Sample Dashboard</h4>\n                                <hr className=\"k-hr\" />\n                                <div className=\"form-group mt-5\">\n                                    <InputLabel>Username</InputLabel>\n                                    <Input type=\"text\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <InputLabel>Password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                    <p className=\"text-xs-right small\">\n                                        <a href=\"/\" onClick={this.handleClick}>Forgot it?</a>\n                                    </p>\n                                </div>\n                                <div className=\"form-group mb-0 text-right\">\n                                    <Button color='primary' onClick={this.login}>Log in</Button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAskDelete: false,\n            showProfileUpdate: false,\n            isWithOverlay: false\n        }\n\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n        this.onUpdateClick = this.onUpdateClick.bind(this);\n    }\n\n    componentDidMount() {\n        let url = this.props.gitUserApiUrl;\n        let options = this.props.gitOptions;\n\n        if (typeof (url) !== 'undefined') {\n            fetch(url, options)\n                .then(response => response.json())\n                .then(json => this.setState(json));\n        }\n    }\n\n    onUpdateClick() {\n        this.setState((prevState, props) => ({\n            showProfileUpdate: !prevState.showProfileUpdate,\n            isWithOverlay: !prevState.isWithOverlay\n        })\n        );\n\n    }\n\n    onDeleteClick() {\n        this.setState((prevState) => ({\n            showAskDelete: !prevState.showAskDelete,\n            isWithOverlay: !prevState.isWithOverlay\n        }));\n    }\n\n    render() {\n        return (\n            this.state &&\n            <div className=\"container-fluid\" id=\"profile\">\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <h4 className=\"d-block\">Account</h4>\n                            <h2>\n                                {this.state.login} - {this.state.name}\n                            </h2>\n                        </div>\n                        <div className=\"col-sm text-sm-right\">\n                            <Button variant=\"contained\">Sign out</Button>\n                        </div>\n                    </div>\n                </div>\n                <Dialog open={this.state.showAskDelete}>\n                    <DialogTitle >Are you sure you want to delete your account?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Account deletion cannot be undone!\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onDeleteClick}>Cancel</Button>\n                        <Button color=\"primary\" onClick={this.onDeleteClick}>Delete</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.showProfileUpdate}>\n                    <DialogTitle>Thank you</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Your profile has been successfully updated\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onUpdateClick} color='primary' type='flat'>OK</Button>\n                    </DialogActions>\n                </Dialog>\n                <div className=\"row\">\n                    <div className=\"col-md-7\">\n\n                        <div className=\"k-card\" id=\"profile\">\n                            <h2 className=\"k-card-header\">Public Profile</h2>\n                            <div className=\"k-card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-3 text-xs-center\">\n                                        {this.state.avatar_url\n                                            ? <img src={this.state.avatar_url} alt=\"Avatar URL\" style={{ 'maxWidth': '100%' }} className=\"img-circle img-large\" />\n                                            : <span className=\"k-icon k-i-loading\" />}\n                                    </div>\n                                    <div className=\"col-md-9\">\n                                        <div className=\"form-group\">\n                                            <InputLabel >Username</InputLabel>\n                                            <Input type=\"text\" id=\"username\" className=\"form-control\" defaultValue={this.state.login} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Name</InputLabel>\n                                            <Input type=\"text\" id=\"name\" className=\"form-control\" defaultValue={this.state.name} ref={(button) => {\n                                                this.anchor = button;\n                                            }} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Email</InputLabel>\n                                            <Input type=\"email\" id=\"email\" className=\"form-control\" defaultValue={this.state.email} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel className=\"form-check-InputLabel h6\">\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox defaultChecked color=\"primary\" />\n                                                    }\n                                                    label=\"Keep my email address private\"\n                                                />\n                                            </InputLabel>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Company</InputLabel>\n                                            <Input type=\"text\" id=\"company\" className=\"form-control\" defaultValue={this.state.company} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Location</InputLabel>\n                                            <Input type=\"text\" id=\"location\" className=\"form-control\" defaultValue={this.state.location} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <Button variant=\"contained\" onClick={this.onUpdateClick}>Update profile</Button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=\"k-card\" id=\"delete-account\">\n                            <h2 className=\"k-card-header\">Delete Account</h2>\n                            <div className=\"k-card-body\">\n                                <p>You will immediately lose access to your repositories and all other information associated with your account.\n                                <strong>This cannot be undone!</strong>\n                                </p>\n                                <Button variant=\"contained\" onClick={this.onDeleteClick}>Delete Account</Button>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"col-md-5\">\n                        <div className=\"k-card\" id=\"notifications\">\n                            <h2 className=\"k-card-header\">Notifications</h2>\n                            <div className=\"k-card-body\">\n                                <h4 >Automatically watch repositories?</h4>\n                                <h3 className=\"text-muted\">When you are given push access to a repository, automatically receive notifications for it.</h3>\n                                <p>\n                                    <Switch color=\"primary\"></Switch>\n                                </p>\n                                <h4 >Receive updates to any conversations via email?</h4>\n                                <p>\n                                    <Switch defaultChecked={true} color=\"primary\"></Switch>\n                                </p>\n                                <h4 >Receive updates to any repositories via email?</h4>\n                                <p>\n                                    <Switch defaultChecked={true} color=\"primary\"></Switch>\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"k-card\" id=\"password\">\n                            <h2 className=\"k-card-header\">Update password</h2>\n                            <div className=\"k-card-body\">\n                                <div className=\"form-group\">\n                                    <InputLabel >Old password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <InputLabel >New password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <InputLabel >Confirm password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <Button variant=\"contained\">Change password</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react'\r\n\r\nexport const withGithubApi = (ApiComponent) => {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            let baseUrl = 'https://api.github.com/repos/telerik/kendo-ui-core/issues';\r\n            let headers = {\r\n                // Generate your own token through\r\n                // https://github.com/settings/tokens\r\n\r\n                'Authorization': \"token b95116792cba5a8169a1ec10640d8c16535c6419\"\r\n            };\r\n\r\n            let options = { method: 'GET', accept: 'application/json', headers: headers };\r\n            this.state = {\r\n                gitOptions: options,\r\n                gitBaseUrl: baseUrl,\r\n                gitUsername: 'simonssspirit'\r\n            };\r\n        }\r\n\r\n        render() {\r\n            return <ApiComponent {...this.state} {...this.props} />\r\n        }\r\n    }\r\n}\r\n\r\nexport const withGithubUser = (ApiComponent) => {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                gitUserApiUrl: `https://api.github.com/users/${this.props.gitUsername}`\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <ApiComponent {...this.state} {...this.props} />\r\n        }\r\n    }\r\n};\r\n","import React, { Component } from 'react';\nimport { NavLink, Route, Redirect } from 'react-router-dom';\n\nimport Dashboard from '../Dashboard';\nimport IssuesIndex from '../Issues';\nimport Signin from '../Signin';\nimport Profile from '../Profile';\nimport { withGithubUser, withGithubApi } from '../Github';\n\nclass MainMenu extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            year: (new Date()).getFullYear()\n        }\n    }\n\n    render() {\n        const notSignIn = this.props.location.pathname !== '/signin'\n        const navbarClassName = 'sticky-top material-color text-white py-3 py-sm-5 k-vbox shadow col-xl-2 d-xl-flex '\n            + (this.props.showNav ? 'show' : 'hide');\n\n        return (\n            <div id=\"app\" className=\"app\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {notSignIn && (<div id=\"nav\" className={navbarClassName}>\n                            <div className=\"container\">\n                                <h1 id=\"app-title\" className=\"mb-0\">Issues</h1>\n                                <h4 id=\"app-subtitle\" className=\"mb-4\">Sample Dashboard</h4>\n                                <hr className=\"k-hr\" />\n                                <h4 className=\"mt-3 mt-sm-5\">Project</h4>\n                                <ul className=\"nav nav-pills flex-column\">\n                                    <li className=\"nav-item\" id=\"dashbaord\">\n                                        <NavLink to=\"/dashboard\" className=\"nav-link\" activeClassName=\"active\">Dashboard</NavLink>\n                                    </li>\n                                    <li className=\"nav-item\" id=\"issues\">\n                                        <NavLink to=\"/issues\" className=\"nav-link\" activeClassName=\"active\">Issues</NavLink>\n                                    </li>\n                                </ul>\n                                <h4 className=\"mt-3 mt-sm-5\">Account</h4>\n                                <ul className=\"nav nav-pills flex-column\">\n                                    <li className=\"nav-item\" id=\"profile\">\n                                        <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">My Profile</NavLink>\n                                    </li>\n                                    <li className=\"nav-item\" id=\"signout\">\n                                        <NavLink to=\"/signin\" className=\"nav-link\" activeClassName=\"active\">Sign Out</NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className=\"container mt-sm-auto\">\n                                <hr className=\"k-flex k-hr k-hr-bottom\" />\n                                <div id=\"copy\">\n                                    <p>Copyright &copy; {this.state.year},<br /><a href=\"http://www.progress.com\">Progress Software Corporation</a> and/or its subsidiaries or affiliates.</p>\n                                    <p>All Rights Reserved.</p>\n                                </div>\n                            </div>\n                        </div>)}\n                        <div className={'content-wrapper col'}>\n                            {this.props.location.pathname === '/' ? <Redirect from=\"/\" to=\"/dashboard\" /> : null}\n                            <Route path=\"/dashboard\" component={Dashboard} />\n                            <Route path=\"/issues\" component={IssuesIndex} />\n                            <Route path=\"/profile\" component={withGithubApi(withGithubUser(Profile))} />\n                            <Route path=\"/signin\" component={Signin} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainMenu","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { issuesFetched, issuesReceived, issuesDetails } from './actions';\nimport MainMenu from './components/MainMenu';\nimport { classNames } from '@progress/kendo-react-common';\n\nconst baseUrl = 'https://api.github.com/repos/telerik/kendo-ui-core/issues';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      showNav: false\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    let dispatcher = (data) => {\n      this.setState({ loading: false });\n      dispatch(issuesReceived(data));\n      dispatch(issuesDetails(data));\n    };\n\n    dispatch(issuesFetched());\n\n    return Promise.all(this.getPageFetchers(10))\n      .then(responses => responses.map(res => res.json()))\n      .then(issues => Promise.all(issues))\n      /* response is array of arrays. Each page is in an array */\n      .then(arraysOfData => arraysOfData.reduce((prev, current) => prev.concat(current)))\n      .then(result => dispatcher(result));\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.pathname !== this.props.location.pathname && this.state.showNav) {\n      this.setState({ showNav: false });\n    }\n  }\n\n  getPageFetchers(numberOfPages) {\n    let fetches = [];\n    let headers = {\n      // Generate your own token through\n      // https://github.com/settings/tokens\n\n      'Authorization': \"token 8d52e8992a52f3fdba0bef8df1fe2ea096c64fb4\"\n    };\n\n    let options = { method: 'GET', accept: 'application/json', headers: headers };\n\n    for (let page = 1; page <= numberOfPages; page++) {\n      let url = baseUrl + `?state=all&page=${page}&per_page=50`;\n      fetches.push(fetch(url, options));\n    }\n\n    return fetches;\n  }\n\n  handleClick = () => {\n    this.setState({ showNav: !this.state.showNav })\n  }\n\n  render() {\n    const showNav = this.state.showNav;\n    const className = classNames('navbar sticky-top bg-white d-xl-none', {\n      'k-shadow': !showNav\n    });\n\n    return (\n      <React.Fragment>\n        <div className={className}>\n          <div onClick={this.handleClick} className={showNav ? 'open' : 'closed'} id=\"nav-icon\" data-toggle=\"collapse\" data-target=\"#side-nav\" aria-controls=\"side-nav\" >\n            {/* Using dummy span elements for animating the 'hamburger' menu */}\n            <span />\n            <span />\n            <span />\n            <span />\n          </div>\n        </div>\n        {this.state.loading ? <span className=\"k-icon k-i-loading\"></span> : <MainMenu {...this.props} showNav={showNav} />}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect()(App);\n","let getRangeStart = (months) => {\r\n    let since = new Date();\r\n    let parsedMonths = parseInt(months,10)\r\n    since.setMonth(since.getMonth() - parsedMonths);\r\n    return since;\r\n}\r\n\r\nlet getState = (months) => {\r\n    return {\r\n        period: months,\r\n        range: {\r\n            to: new Date(),\r\n            from: getRangeStart(months)\r\n        }\r\n    };\r\n}\r\n\r\nlet initialState = {\r\n    data: [],\r\n    period:getState(3),\r\n    initialIssues: []\r\n};\r\n\r\n\r\nexport const issues = (state = initialState, action) => {\r\n    if (action.type === 'ISSUES_RECEIVED') {\r\n        let initialIssues = action.payload.filter(issue => issue.pull_request ? false : true);\r\n        let issues = action.payload.filter(issue => !issue.pull_request && new Date(issue.created_at) > new Date(state.period.range.from) ? true : false);\r\n        let newState = Object.assign({ period: state.period, data: issues, initialIssues: initialIssues}, {});\r\n        return newState;\r\n    } else if(action.type ==='ISSUES_COLLAPSED') {\r\n        let issues = action.payload;\r\n        let newState = state;\r\n        newState.data = issues.map(issue => { let iss = Object.assign({}, issue); iss.expanded = false; return iss; });\r\n        return newState;\r\n    } else if (action.type === 'ISSUES_TOGGLE_EXPAND') {\r\n        let dataItem = action.payload;\r\n        let index = state.data.findIndex(i => i.number === dataItem.number);\r\n        let clonedDataItem = Object.assign({}, state.data[index]);\r\n        clonedDataItem.expanded = !dataItem.expanded;\r\n\r\n        let newIssues = [\r\n            ...state.data.slice(0, index),\r\n            clonedDataItem,\r\n            ...state.data.slice(index + 1)\r\n        ];\r\n        let newState = Object.assign({ period: state.period, data: newIssues, initialIssues: state.initialIssues}, {});\r\n        return newState;\r\n        } else if (action.type === 'ISSUES_PERIOD_CHANGED') {\r\n        let newPeriod = getState(action.payload.period)\r\n        let initialIssues = state.initialIssues\r\n        let newIssues = initialIssues.filter(issue => new Date(issue.created_at) > new Date(newPeriod.range.from)  ? true : false);;\r\n        let newState = Object.assign({ period: newPeriod, data: newIssues, initialIssues: state.initialIssues}, {});\r\n\r\n        return newState\r\n    }\r\n    \r\n    else {\r\n        return state;\r\n    }\r\n};","let initialState = {\n    skip:0,\n    take: 10\n}\n\nexport const issuesPaging = (state = initialState, action) => {\n    if (action.type === 'ISSUES_PAGE_CHANGE') {\n        let newState = { skip: action.skip, take: action.take, pageSize: action.take }\n        return newState\n    } else {\n        return state;\n    }\n}\n","import { combineReducers } from 'redux';\r\nimport { issues } from './issues';\r\nimport { issuesPaging } from './issuesPaging';\r\n\r\nexport const issuesDashboard = combineReducers({issues, issuesPaging});","import { createStore } from \"redux\";\r\nimport { issuesDashboard } from '../reducers';\r\n\r\nexport const issuesStore = createStore(issuesDashboard, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom';\nimport App from './App.jsx';\nimport { Ripple } from '@progress/kendo-react-ripple';\n\nimport './index.scss';\n\nimport { issuesStore } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst AppWithRouting = withRouter(App);\n\nReactDOM.render((\n    <Provider store={issuesStore}>\n        <Ripple>\n            <HashRouter>\n                <AppWithRouting />\n            </HashRouter>\n        </Ripple>\n    </Provider>\n    ),\n    document.getElementById('root')\n);\n"],"sourceRoot":""}