{"version":3,"sources":["actions/index.js","components/Common/Header.js","components/Dashboard/HeaderContainer.js","components/Charts/ActiveIssues/ActiveIssues.js","components/Charts/ActiveIssues/ClosedIssues.js","components/Charts/ActiveIssues/OpenIssues.js","components/Charts/ActiveIssues/AllIssues.js","components/Charts/ActiveIssues/CloseRate.js","components/Charts/ActiveIssues/index.js","components/Charts/IssuesTypesChart.js","components/Charts/IssuesTypes.js","components/Charts/TypesDistribution.js","components/Dashboard/Statistics.js","lib/issues.js","components/Dashboard/ChartsContaner.js","components/Dashboard/index.js","components/Issues/IssuesContainer.js","components/Issues/IssuesGridCellTemplates.js","components/Issues/Markdown.js","components/Issues/IssuesGrid.js","components/Issues/IssuesGridContainer.js","components/Issues/index.js","components/Signin/index.js","components/Profile/index.js","components/MainMenu/index.js","components/Github/index.js","App.jsx","reducers/issues.js","reducers/issuesPaging.js","reducers/index.js","store/index.js","index.js"],"names":["periodChanged","period","type","payload","Header","changePeriod","e","months","target","value","_this","props","onPeriodChange","_this2","this","_this$props$range","range","from","to","formatedFrom","provideIntlService","formatDate","formatedTo","react_default","a","createElement","id","className","name","main","periods","map","p","key","selected","togglable","onClick","concat","Component","registerForIntl","HeaderContainer","connect","state","Object","objectSpread","issues","dispatch","ActiveIssues","seriesData","active","count","dist_es_main","style","height","background","data","line","field","categoryField","aggregate","stack","gap","overlay","color","baseUnit","majorGridLines","visible","majorTicks","labels","step","skip","font","ClosedIssues","closed","length","open","AllIssues","opacity","border","rotation","margin","top","right","CloseRate","formatp","number","Intl","NumberFormat","navigator","language","format","formatd","date","Date","parseInt","toDateString","closeRate","average","highest","close_rate","created_at","lowest","marginLeft","bulletData","currentField","targetField","narrowRange","plotBands","ActiveIssuesDash","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelect","setState","_this$props","activeCount","current","Math","round","kendo_react_layout_dist_es_main","onSelect","animation","title","Charts_ActiveIssues_ActiveIssues","ActiveIssues_ClosedIssues","OpenIssues","ActiveIssues_CloseRate","ActiveIssues_AllIssues","React","IssuesTypesChart","init","event","seriesHover","hoverColor","point","options","donutPercent","donutLabel","category","currentState","pointIndex","undefined","nextProps","width","onSeriesHover","updateDonutLegend","bind","onLegendItemClick","updateSeries","transitions","donutCenterRender","holeSize","size","position","padding","orientation","IssuesTypes","didInit","sevlow","find","series","assertThisInitialized","Charts_IssuesTypesChart","TypesDistribution","seriesColors","label","mapSeries","markers","addSeries","initialGrey","visibleSeries","filter","s","button","b","categoryAxis","idx","chartOptions","valueAxis","Statistics","Charts_ActiveIssues","Charts_IssuesTypes","issuesTypes","Charts_TypesDistribution","typesDistribution","colors","SEV: LOW","SEV: MEDIUM","SEV: HIGH","ENHANCEMENT","FEATURE","OTHER","PASSED QA","BUG","NEEDS QA","DOCUMENTATION","DEMO","DELETED","IN PROGRESS","mapUser","user","login","avatarUrl","avatar_url","avatarUrlThumb","mapLabels","toUpperCase","mapIssue","issue","body","author","assignees","dateClosed","closed_at","milestone","assignee","reduce","acc","curr","cleanupLabels","filtered","ChartsContainer","mappedIssues","_groupIssues","push","issuesPeriod","flatten","item","low","medium","high","enhancement","feature","other","parseFloat","toFixed","groupLabels","setHours","Others","Enhancement","SEV: Low","SEV: Medium","SEV: High","Feature","distribution","rate","keys","closedKey","Dashboard","Dashboard_HeaderContainer","ChartsContaner","IssuesContainer","AssigneeCellTemplate","dataItem","src","alt","MilestoneCellTemplate","NumberCellTemplate","href","html_url","TitleCellTemplate","classes","join","LabelCellTemplate","backgroundColor","Markdown","react_markdown_default","source","input","RowDetailComponent","badgeClass","IssuesGridCellTemplates_LabelCellTemplate","Issues_Markdown","cellWithTemplate","_React$Component","_class","apply","arguments","inherits","createClass","IssuesGrid","kendo_react_grid_dist_es_main","detail","expandField","onExpandChange","onToggleExpand","onPageChange","onIssuesPageChange","total","scrollable","pageable","pageSize","overflow","cell","IssuesGridContainer","_state$issuesPaging","issuesPaging","take","periodStart","itemsInPeriod","getTime","issuesInRange","slice","paging","page","IssuesIndex","Issues_IssuesContainer","Issues_IssuesGridContainer","history","handleClick","preventDefault","InputLabel_default","Input_default","Button_default","Profile","showAskDelete","showProfileUpdate","isWithOverlay","onDeleteClick","onUpdateClick","url","gitUserApiUrl","gitOptions","fetch","then","response","json","prevState","_this3","variant","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","maxWidth","defaultValue","ref","anchor","email","FormControlLabel_default","control","Checkbox_default","defaultChecked","company","location","Switch_default","MainMenu","year","getFullYear","ApiComponent","notSignIn","pathname","navbarClassName","showNav","NavLink","activeClassName","Redirect","Route","path","component","_Component","method","accept","headers","Authorization","gitBaseUrl","gitUsername","assign","withGithubApi","_Component2","_class2","Signin","App","loading","Promise","all","getPageFetchers","responses","res","arraysOfData","prev","result","prevProps","numberOfPages","fetches","classNames","k-shadow","Fragment","data-toggle","data-target","aria-controls","components_MainMenu","getState","since","parsedMonths","setMonth","getMonth","getRangeStart","initialState","initialIssues","issuesDashboard","combineReducers","action","pull_request","newState","iss","expanded","index","findIndex","i","clonedDataItem","newIssues","toConsumableArray","newPeriod","issuesStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","AppWithRouting","withRouter","ReactDOM","render","es","store","kendo_react_ripple_dist_es_main","HashRouter","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e2689112.chunk.js","sourcesContent":["export const periodChanged = (period) => {\r\n    return {\r\n        type: 'ISSUES_PERIOD_CHANGED',\r\n        payload: period\r\n    }\r\n};\r\n\r\nexport const issuesReceived = (issues) => {\r\n    return {\r\n        type: 'ISSUES_RECEIVED',\r\n        payload: issues\r\n    }\r\n}\r\n\r\nexport const issuesToggleExpand = (issues) => {\r\n    return {\r\n        type: 'ISSUES_TOGGLE_EXPAND',\r\n        payload: issues\r\n    }\r\n}\r\n\r\nexport const issuesDetails = (issues) => {\r\n    return {\r\n        type: 'ISSUES_COLLAPSED',\r\n        payload: issues\r\n    }\r\n}\r\n\r\nexport const issuesFetched = () => {\r\n    return {\r\n        type: 'ISSUES_FETCHED'\r\n    }\r\n}\r\n\r\nexport const issuesPageChange = (paging) => {\r\n    return {\r\n        type: 'ISSUES_PAGE_CHANGE',\r\n        ...paging\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { ButtonGroup, Button } from '@progress/kendo-react-buttons';\nimport { registerForIntl, provideIntlService } from '@progress/kendo-react-intl';\n\nclass Header extends Component {\n    static periods = [\"3\", \"6\", \"12\"];\n\n    changePeriod = (e) => {\n        let months = e.target.value;\n        this.props.onPeriodChange({ period: months });\n    }\n\n    render() {\n        const { from, to } = this.props.range;\n        const formatedFrom = provideIntlService(this).formatDate(from, 'MMMM dd, yyyy');\n        const formatedTo = provideIntlService(this).formatDate(to, 'MMMM dd, yyyy');\n\n        return (\n            <div id=\"header\" className=\"row\">\n                <div className=\"col-sm\">\n                    <h4 className=\"d-block\">{this.props.name}</h4>\n                    <h2>\n                        {[formatedFrom, ' - ', formatedTo]}\n                    </h2>\n                </div>\n                <div className=\"col-sm text-sm-right p-0 p-sm-3\">\n                    <ButtonGroup className=\"justify-content-center\">\n                        {\n                            Header.periods.map(p => <Button\n                                key={p} value={p}\n                                selected={this.props.period === p}\n                                togglable={true}\n                                onClick={this.changePeriod}\n                            >{`${p} Months`}\n                            </Button>)\n                        }\n                    </ButtonGroup>\n                </div>\n            </div>\n        );\n    };\n}\n\nregisterForIntl(Header);\n\nexport default Header;\n","import Header from './../Common/Header';\n\nimport { connect } from 'react-redux';\nimport { periodChanged } from './../../actions';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onPeriodChange: period => {\n            dispatch(periodChanged(period));\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state.issues.period,\n        name: 'Statistics'\n    }\n}\n\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\nexport default HeaderContainer;\n","import React from 'react';\n\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartValueAxis,\n    ChartValueAxisItem,\n    ChartArea\n} from '@progress/kendo-react-charts';\n\nconst ActiveIssues = (props) => {\n    const seriesData = props.active;\n    const categoryAxis = { baseUnit: 'months', majorGridLines: { visible: false }, majorTicks: { visible: false }, labels: { step: 4, skip: 2, font: '10px sans-serif' }, line: { visible: false } };\n\n    return (\n        <div className=\"col-sm-12 col-lg-6 col-xl active-issues\" >\n            <div className=\"comp-label\">\n                <div className=\"issues-count\">{props.count}</div>\n                <div className=\"issues-label\">Active issues</div>\n            </div>\n            <Chart style={{ height: '80px' }}>\n                <ChartArea background={\"white\"} />\n                <ChartSeries>\n                    <ChartSeriesItem data={seriesData} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} gap={0.5} overlay={false} color=\"#888\" />\n                </ChartSeries>\n                <ChartCategoryAxis>\n                    <ChartCategoryAxisItem {...categoryAxis} />\n                </ChartCategoryAxis>\n                <ChartValueAxis>\n                    <ChartValueAxisItem visible={false} majorGridLines={{ visible: false }} />\n                </ChartValueAxis>\n            </Chart>\n        </div>\n    );\n}\n\nexport default ActiveIssues;\n","import React from 'react';\r\nimport { Chart,\r\n    ChartSeries,\r\n    ChartSeriesItem,\r\n    ChartCategoryAxis,\r\n    ChartCategoryAxisItem,\r\n    ChartValueAxis,\r\n    ChartValueAxisItem,\r\n    ChartArea } from '@progress/kendo-react-charts';\r\n\r\nconst ClosedIssues = (props) => {\r\n    const seriesData =  props.closed\r\n    const categoryAxis = { baseUnit: 'months', majorGridLines: {visible: false}, majorTicks: { visible: false  }, labels: { step: 4, skip: 2, font: '10px sans-serif' }, line: { visible: false } };\r\n    return (\r\n        <div className=\"col-12 col-lg-6 col-xl pb-4 text-danger closed-issues\">\r\n            <div className=\"comp-label\">\r\n                <div className=\"issues-count\">{props.closed.length}</div>\r\n                <div className=\"issues-label\">Closed issues</div>\r\n            </div>\r\n            <Chart style={{ height: '80px' }}>\r\n                <ChartArea background={\"white\"}/>\r\n                <ChartSeries>\r\n                    <ChartSeriesItem data={seriesData} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} gap={0.5} overlay={false} color={\"#e91e63\"}/>\r\n                </ChartSeries>\r\n                <ChartCategoryAxis>\r\n                    <ChartCategoryAxisItem {...categoryAxis}/>\r\n                </ChartCategoryAxis>\r\n                <ChartValueAxis>\r\n                    <ChartValueAxisItem visible={false}  majorGridLines=\"{ visible: false }}\"/>\r\n                </ChartValueAxis>\r\n            </Chart>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClosedIssues;","import React from 'react';\r\nimport { Chart,\r\n    ChartSeries,\r\n    ChartSeriesItem,\r\n    ChartCategoryAxis,\r\n    ChartCategoryAxisItem,\r\n    ChartValueAxis,\r\n    ChartValueAxisItem,\r\n    ChartArea } from '@progress/kendo-react-charts';\r\n\r\nconst ClosedIssues = (props) => {\r\n    const seriesData =  props.open\r\n    const categoryAxis = { baseUnit: 'months', majorGridLines: {visible: false}, majorTicks: { visible: false  }, labels: { step: 4, skip: 2, font: '10px sans-serif' }, line: { visible: false } };\r\n    return (\r\n        <div className=\"col-12 col-lg-6 col-xl pb-4 text-success closed-issues\">\r\n            <div className=\"comp-label\">\r\n                <div className=\"issues-count\">{props.open.length}</div>\r\n                <div className=\"issues-label\">Open issues</div>\r\n            </div>\r\n            <Chart style={{ height: '80px' }}>\r\n                <ChartArea background={\"white\"}/>\r\n                <ChartSeries>\r\n                    <ChartSeriesItem data={seriesData} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} gap={0.5} overlay={false} color={\"#27c46d\"}/>\r\n                </ChartSeries>\r\n                <ChartCategoryAxis>\r\n                    <ChartCategoryAxisItem {...categoryAxis}/>\r\n                </ChartCategoryAxis>\r\n                <ChartValueAxis>\r\n                    <ChartValueAxisItem visible={false}  majorGridLines=\"{ visible: false }}\"/>\r\n                </ChartValueAxis>\r\n            </Chart>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClosedIssues;","import React from 'react';\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartValueAxis,\n    ChartValueAxisItem,\n    ChartArea\n} from '@progress/kendo-react-charts';\n\nconst AllIssues = (props) => {\n    const categoryAxis = {\n        baseUnit: 'months',\n        majorTicks: { visible: false },\n        majorGridLines: { visible: false },\n        labels: { rotation: 'auto', margin: { top: 8 } },\n        line: { visible: false }\n    };\n\n    const valueAxis = {\n        line: { visible: false },\n        labels: { step: 2, skip: 2, margin: { right: 4 } },\n        majorGridLines: { step: 2, skip: 2, color: '#F0F2F2' }\n    };\n\n    return (\n        <div className=\"col-12 all-issues\">\n            <Chart style={{ height: '320px' }}>\n                <ChartArea background={\"white\"} />\n                <ChartSeries>\n                    <ChartSeriesItem data={props.open} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} opacity={0.3} gap={0.06} overlay={false} color={\"#27c46d\"} border={\"color: '#27c46d', opacicty: 0.3\"} />\n                    <ChartSeriesItem data={props.closed} type=\"area\" line={{ style: \"smooth\" }} field=\"count\" categoryField=\"date\" aggregate=\"count\" stack={true} opacity={0.3} gap={0.06} overlay={false} color={\"#e91e63\"} border={\"color: '#e91e63', opacicty: 0.3\"} />\n                </ChartSeries>\n                <ChartCategoryAxis>\n                    <ChartCategoryAxisItem {...categoryAxis} />\n                </ChartCategoryAxis>\n                <ChartValueAxis>\n                    <ChartValueAxisItem {...valueAxis} />\n                </ChartValueAxis>\n            </Chart>\n        </div>\n    );\n}\n\nexport default AllIssues;\n","import React from 'react';\r\nimport { Chart,\r\n     ChartSeries,\r\n     ChartSeriesItem,\r\n     ChartValueAxis,\r\n     ChartValueAxisItem,\r\n     ChartArea } from '@progress/kendo-react-charts';\r\n\r\nconst CloseRate = (props) => {\r\n    const formatp = (number) => {\r\n        return Intl.NumberFormat(navigator.language, {style: 'percent'}).format(number);\r\n    };\r\n\r\n    const formatd = (date) => {\r\n        if (!date) {\r\n            return '';\r\n        }\r\n        return new Date(parseInt(date, 10)).toDateString();\r\n    }\r\n\r\n    const closeRatePlotBands = [{from: 0, to:100, color: \"#27c46d\" }]\r\n\r\n    return (\r\n        <div className=\"col-12 col-lg-6 col-xl pb-4 close-rate\">\r\n            <div className=\"comp-label\">\r\n                <div className=\"issues-count\">{formatp(props.closeRate.average)}</div>\r\n                <div className=\"issues-label\">Close rate</div>\r\n            </div>\r\n\r\n            <p className=\"m-0 small text-uppercase text-muted\">\r\n                Highest:\r\n                {formatp(props.closeRate.highest.close_rate) }\r\n                on {formatd(props.closeRate.highest.created_at)}\r\n            </p>\r\n            <p className=\"m-0 small text-uppercase text-muted\">\r\n                Lowest:\r\n                {formatp(props.closeRate.lowest.close_rate)}\r\n                on {formatd(props.closeRate.lowest.created_at)}\r\n            </p>\r\n            <Chart style={{ height: '30px', marginLeft: \"-15px\"}}>\r\n                <ChartArea background={\"white\"}/>\r\n                <ChartSeries>\r\n                    <ChartSeriesItem data={props.bulletData}  gap={0} type=\"bullet\" currentField=\"current\" targetField=\"target\" color=\"#e91e63\" target={{color: \"#FFF\"}}/>\r\n                </ChartSeries>\r\n                <ChartValueAxis>\r\n                    <ChartValueAxisItem narrowRange={false} plotBands={closeRatePlotBands} visible={false} majorGridLines={{visible:false}}/>\r\n                </ChartValueAxis>\r\n            </Chart>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CloseRate;","import React from 'react';\nimport ActiveIssues from './ActiveIssues';\nimport ClosedIssues from './ClosedIssues';\nimport OpenIssues from './OpenIssues';\nimport AllIssues from './AllIssues';\nimport CloseRate from './CloseRate';\nimport { TabStrip, TabStripTab } from '@progress/kendo-react-layout';\n\nclass ActiveIssuesDash extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: 0\n        }\n    }\n    handleSelect = (e) => {\n        this.setState({ selected: e.selected })\n    }\n\n    render() {\n        const { open, closed, active } = this.props;\n        const activeCount = open.length + closed.length;\n        const bulletData = [{ target: 70, current: Math.round(this.props.closeRate.average * 100) }]\n        return (\n            <div className=\"k-card\">\n                <h2 className=\"k-card-header m-0\">Active Issues</h2>\n                <div className=\"k-card-body\">\n                    <TabStrip selected={this.state.selected} onSelect={this.handleSelect} animation={false} className=\"col-12\">\n                        <TabStripTab title=\"All Issues\">\n                            <div className=\"row\">\n                                <ActiveIssues active={active} count={activeCount} />\n                                <ClosedIssues closed={closed} />\n                                <OpenIssues open={open} />\n                                <CloseRate closeRate={this.props.closeRate} bulletData={bulletData} />\n                            </div>\n                            <div className=\"row\">\n                                <AllIssues open={open} closed={closed} />\n                            </div>\n                        </TabStripTab>\n                        <TabStripTab title=\"Assigned to Me\">\n                            <div className=\"row\">\n                                <ActiveIssues active={active} count={activeCount} />\n                                <ClosedIssues closed={closed} />\n                                <OpenIssues open={open} />\n                                <CloseRate closeRate={this.props.closeRate} bulletData={bulletData} />\n                            </div>\n                            <div className=\"row\">\n                                <AllIssues open={open} closed={closed} />\n                            </div>\n                        </TabStripTab>\n                        <TabStripTab title=\"Created by Me\">\n\n                            <div className=\"row\">\n                                <ActiveIssues active={active} count={activeCount} />\n                                <ClosedIssues closed={closed} />\n                                <OpenIssues open={open} />\n                                <CloseRate closeRate={this.props.closeRate} bulletData={bulletData} />\n                            </div>\n                            <div className=\"row\">\n                                <AllIssues open={open} closed={closed} />\n                            </div>\n                        </TabStripTab>\n                    </TabStrip>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default ActiveIssuesDash;\n","import React, { Component } from 'react';\nimport {\n    Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartLegend\n} from '@progress/kendo-react-charts';\nimport 'hammerjs';\n\n\nclass IssuesTypesChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: true,\n            data: this.props.data\n        }\n    }\n\n    updateDonutLegend(event) {\n        this.setState({\n            init: false\n        });\n        this.props.seriesHover({\n            hoverColor: event.point.options.color,\n            donutPercent: Math.round(event.value * 100 || 0),\n            donutLabel: event.category\n        });\n    }\n\n    updateSeries(event) {\n        let currentState = this.state.data;\n\n        currentState[event.pointIndex].visible = currentState[event.pointIndex].visible === undefined\n            ? false\n            : !currentState[event.pointIndex].visible;\n\n        this.setState({\n            data: currentState,\n            init: true\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            data: nextProps.data\n        })\n    }\n\n    render() {\n        const labels = { font: '1em Roboto, Arial, sans-serif', padding: 5 };\n        const border = { color: 'white', width: 1 };\n\n        return (\n            <Chart\n                style={{ width: '100%', height: '400px' }}\n                onSeriesHover={this.updateDonutLegend.bind(this)}\n                onLegendItemClick={this.updateSeries.bind(this)}\n                transitions={false}\n                donutCenterRender={this.props.donutCenterRender}\n            >\n                <ChartSeries>\n                    <ChartSeriesItem\n                        border={border}\n                        holeSize={100}\n                        data={this.state.data}\n                        size= {15}\n                        type=\"donut\"\n                        field=\"value\"\n                        categoryField=\"type\"\n                        overlay={false}\n                    />\n                </ChartSeries>\n                <ChartLegend position=\"bottom\" labels={labels} orientation=\"horizontal\" padding={2} />\n            </Chart>\n        );\n    }\n}\n\nexport default IssuesTypesChart;\n","import React, { Component } from 'react';\nimport IssuesTypeChart from './IssuesTypesChart';\n\nclass IssuesTypes extends Component {\n    didInit = false;\n    constructor(props) {\n        super(props);\n\n        let sevlow = props.data.find(series => series.type === 'SEV: LOW');\n\n        this.state = {\n            value: sevlow.value,\n            category: sevlow.type,\n            point: {\n                options: {\n                    color: 'rgb(255, 99, 88)'\n                }\n            },\n            donutLabel: sevlow.type,\n            donutPercent: Math.round(sevlow.value * 100 || 0),\n            hoverColor: 'rgb(252, 81, 8)'\n        }\n\n        this.seriesHover = this.seriesHover.bind(this);\n    }\n\n    seriesHover(event) {\n        this.setState(event);\n    }\n    componentWillReceiveProps(props) {\n        if (props.data.find(series => series.type === this.state.category).value !== this.state.value) {\n            let sevlow = props.data.find(series => series.type === 'SEV: LOW');\n            this.setState({\n                value: sevlow.value,\n                donutPercent: Math.round(sevlow.value * 100 || 0),\n            })\n            this.didInit = true;\n        }\n    }\n    donutCenterRender = (e) => {\n        return (<div className=\"comp-label chart-label\" style={{ color: this.state.hoverColor }}>\n            <div className=\"issues-count\">{this.state.donutPercent} <span className=\"percentage\">%</span></div>\n            <div className=\"issues-label\">{this.state.donutLabel}</div>\n        </div>)\n    }\n\n    render() {\n        return (\n            <div className=\"k-card\">\n                <h2 className=\"k-card-header\">Issue Types</h2>\n                <div className=\"k-card-body height-1\">\n                    <div className=\"issue-types\">\n                        <IssuesTypeChart data={this.props.data} seriesHover={this.seriesHover} donutCenterRender={this.donutCenterRender} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default IssuesTypes;\n","import React, { Component } from 'react';\nimport { Chart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartValueAxis,\n    ChartValueAxisItem,\n    ChartArea } from '@progress/kendo-react-charts';\n\nclass TypesDistribution extends Component {\n    seriesColors = [\n        { label: \"SEV: Low\", value: \"#FF9966\", active: true },\n        { label: \"SEV: Medium\", value: \"#BB6ACB\", active: false },\n        { label: \"SEV: High\", value: \"#52C3D3\", active: false },\n        { label: \"Enhancement\", value: \"#22C85D\", active: true },\n        { label: \"Feature\", value: \"#FF6358\", active: false },\n        { label: \"Others\", value: \"#2BA7DA\", active: true }\n    ];\n    constructor(props) {\n        super(props);\n        this.data = props.data;\n        this.addSeries = this.addSeries.bind(this);\n        this.state = {\n            initialGrey: '#A2ACAC',\n            visibleSeries: this.seriesColors.filter(s => s.active).map(this.mapSeries),\n            seriesColors: this.seriesColors,\n            mapSeries: this.mapSeries\n        };\n    }\n    componentWillReceiveProps(props) {\n        this.data = props.data\n        this.setState({\n            visibleSeries: this.seriesColors.filter(s => s.active).map(this.state.mapSeries),\n        })\n    }\n\n    mapSeries = ((series) => {\n        return {\n            color: series.value,\n            markers: { visible: false },\n            data: this.data[series.label]\n        };\n    })\n\n    addSeries(button) {\n        let seriesColors = this.state.seriesColors.map(b => { if (button.value === b.value) { b.active = !b.active } return b; });\n        let visibleSeries = seriesColors.filter(s => s.active).map(this.state.mapSeries)\n\n        this.setState({ seriesColors, visibleSeries });\n    }\n\n    render() {\n        const categoryAxis = { baseUnit: 'months', majorTicks: { visible: false }, labels: { step: 4, skip: 2 }, majorGridLines: { visible: false }, line: { visible: false } };\n        const series = this.state.visibleSeries.map((series, idx) => {\n\n            const chartOptions = {\n                type: 'line',\n                key: idx,\n                overlay: false,\n                data: series.data,\n                markers: series.markers,\n                color: series.color,\n                style: 'smooth',\n                aggregate: 'count',\n                categoryField: 'date'\n            }\n            return <ChartSeriesItem {...chartOptions} />\n        });\n        const valueAxis = { line: { visible: false }, labels: { step: 2, skip: 2 }, majorGridLines: { step: 2, skip: 2, color: '#F0F2F2' } };\n\n        return (\n            <div className=\"k-card\">\n            <h2 className=\"k-card-header\">Types Distribution</h2>\n                <div className=\"k-card-body height-1\">\n                    <div className=\"row\">\n                        {\n                            this.state.seriesColors.map(button =>\n                                <div\n                                    onClick={() => { this.addSeries(button) }}\n                                    key={button.label}\n                                    style={{ color: button.active ? button.value : this.state.initialGrey }}\n                                    className=\"col-6 col-sm-4 col-xl-2 comp-label\"\n                                >\n                                    <div className=\"issues-count\">{this.props.data[button.label].length}</div>\n                                    <div className=\"issues-label\">{button.label}</div>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 types-distribution\">\n                            <Chart style={{ height: '300px' }}\n                                transitions={false}\n                                categoryAxis={categoryAxis}\n                                valueAxis={valueAxis}>\n                                <ChartArea background={\"white\"}/>\n                                <ChartSeries>\n                                    {series}\n                                </ChartSeries>\n                                <ChartValueAxis>\n                                    <ChartValueAxisItem {...valueAxis}/>\n                                </ChartValueAxis>\n                                <ChartCategoryAxis>\n                                    <ChartCategoryAxisItem {...categoryAxis} />\n                                </ChartCategoryAxis>\n                            </Chart>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TypesDistribution;\n","import React from 'react';\nimport ActiveIssuesDash from './../Charts/ActiveIssues';\nimport IssuesTypes from './../Charts/IssuesTypes';\nimport TypesDistribution from './../Charts/TypesDistribution';\n\nclass Statistics extends React.Component {\n    render() {\n        return (\n            <div id=\"statistics\" className=\"row\">\n                <div className=\"col-12 \">\n                    <ActiveIssuesDash {...this.props} />\n                </div>\n                <div className=\"col-xl-4\">\n                    <IssuesTypes data={this.props.issuesTypes} />\n                </div>\n                <div className=\"col-xl-8\">\n                    <TypesDistribution data={this.props.typesDistribution} months=\"months\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n","export const issuesInRange = (issue, from) => {\r\n    return (new Date(issue.created_at).getTime() > from.getTime());\r\n}\r\n\r\nconst colors = {\r\n    'SEV: LOW': '#ff9800',\r\n    'SEV: MEDIUM': '#ff5d2a',\r\n    'SEV: HIGH': '#d50000',\r\n    'ENHANCEMENT': '#00c853',\r\n    'FEATURE': '#2e7d32',\r\n    'OTHER': '#1ca8dd',\r\n    'PASSED QA': '#57b45b',\r\n    'BUG': '#cf3257',\r\n    'NEEDS QA': '#bc007c',\r\n    'DOCUMENTATION': '#455a64',\r\n    'DEMO': '#673ab7',\r\n    'DELETED': '#f44336',\r\n    'IN PROGRESS': '#ffd600'\r\n  };\r\n\r\n\r\nconst mapUser = (user) => {\r\n    return {\r\n        id: user.id,\r\n        name: user.login,\r\n        avatarUrl: user.avatar_url,\r\n        avatarUrlThumb: user.avatar_url + \"&size=60\"\r\n    };\r\n}\r\n\r\nconst mapLabels = (label) => {\r\n    const name = label.name.toUpperCase();\r\n\r\n    if (name in colors) {\r\n        label.color = colors[name];\r\n    } else {\r\n        label.color = colors[\"OTHER\"];\r\n    }\r\n\r\n    return label;\r\n}\r\n\r\nexport const mapIssue = (issue) => {\r\n    return {\r\n      id: issue.number,\r\n      title: issue.title,\r\n      body: issue.body,\r\n      author: mapUser(issue.user),\r\n      assignees: (issue.assignees ? issue.assignees.map(mapUser) : []),\r\n      state: issue.state,\r\n      date: new Date(issue.created_at),\r\n      dateClosed: (issue.closed_at ? new Date(issue.closed_at) : undefined),\r\n      count: 1,\r\n      labels: issue.labels.map(mapLabels),\r\n      milestone: issue.milestone,\r\n      created_at: issue.created_at,\r\n      assignee: issue.assignee ? issue.assignee.login : 'none'\r\n    };\r\n}\r\n\r\nconst flatten = (data) => {\r\n    return data.reduce((acc, curr) => acc.concat(curr), []);\r\n}\r\n\r\nconst aggregate = (data, field) => {\r\n    return data.reduce((acc, curr) => {\r\n      acc[curr[field]] = (acc[curr[field]] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\nexport const groupIssues= (data)=> {\r\n    return data.reduce((acc, curr) => {\r\n      acc[curr.state].push(curr);\r\n      return acc;\r\n    }, { open: [], closed: [] });\r\n}\r\n\r\nexport const groupLabels = (data) => {\r\n    const labels = aggregate(flatten(data.map(item => item.labels)), 'name');\r\n    const low = (labels['SEV: Low'] / data.length);\r\n    const medium = labels['SEV: Medium'] / data.length;\r\n    const high = labels['SEV: High'] / data.length;\r\n    const enhancement = labels['Enhancement'] / data.length;\r\n    const feature = labels['Feature'] / data.length;\r\n    const other = 1 - low - medium - high - enhancement - feature;\r\n\r\n    return [\r\n      { type: 'SEV: LOW', value: parseFloat(low.toFixed(2)) },\r\n      { type: 'SEV: MEDIUM', value: parseFloat(medium.toFixed(2)) },\r\n      { type: 'SEV: HIGH', value: parseFloat(high.toFixed(2)) },\r\n      { type: 'ENHANCEMENT', value: parseFloat(enhancement.toFixed(2)) },\r\n      { type: 'FEATURE', value: parseFloat(feature.toFixed(2)) },\r\n      { type: 'OTHER', value: parseFloat(other.toFixed(2)) }\r\n    ];\r\n}\r\n\r\nexport const distribution = (data) => {\r\n    let foo = data.map(item => ({\r\n      created_at: new Date(item.created_at).setHours(0, 0, 0, 0),\r\n      label: cleanupLabels(item.labels)\r\n    }))\r\n      .reduce((acc, curr) => {\r\n        acc[curr.label].push({\r\n          date: new Date(curr.created_at),\r\n          value: 1\r\n        });\r\n        return acc;\r\n      }, { Others: [], Enhancement: [], 'SEV: Low': [], 'SEV: Medium': [], 'SEV: High': [], 'Feature': [] });\r\n      return foo;\r\n}\r\n\r\n\r\nexport const closeRate = (data) => {\r\n    const closed = aggregate(data.closed.map(item => ({\r\n      created_at: new Date(item.created_at).setHours(0, 0, 0, 0)\r\n    })), 'created_at');\r\n\r\n    const open = aggregate(data.open.map(item => ({\r\n      created_at: new Date(item.created_at).setHours(0, 0, 0, 0)\r\n    })), 'created_at');\r\n\r\n    const rate = Object.keys(closed).map(key => {\r\n      const closedKey = closed[key] || 0;\r\n      const openKey = open[key] || 0;\r\n      const closeRate = closedKey / (closedKey + openKey);\r\n      return {\r\n        created_at: key,\r\n        close_rate: closeRate\r\n      };\r\n    });\r\n    return {\r\n      lowest: rate.reduce((acc, curr) => acc.close_rate < curr.close_rate ? acc : curr, []),\r\n      highest: rate.reduce((acc, curr) => acc.close_rate > curr.close_rate ? acc : curr, []),\r\n      average: data.closed.length / (data.open.length + data.closed.length) || 0\r\n    };\r\n  }\r\n\r\nconst cleanupLabels = (labels) => {\r\n    let filtered = labels.filter(label =>\r\n      label.name === 'SEV: Low' ||\r\n      label.name === 'SEV: High' ||\r\n      label.name === 'Feature' ||\r\n      label.name === 'Enhancement' ||\r\n      label.name === 'SEV: Medium')\r\n      .map(label => label.name);\r\n    return filtered.length === 0 ? 'Others' : filtered[0];\r\n}","import Statistics from './Statistics';\r\nimport { mapIssue, groupLabels, distribution, groupIssues, closeRate } from './../../lib/issues';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    const mappedIssues = state.issues.data.map(mapIssue);\r\n    const { open, closed } = groupIssues(mappedIssues);\r\n\r\n    return {\r\n        open: open,\r\n        closed: closed,\r\n        months: state.issuesPeriod,\r\n        issuesTypes: groupLabels(mappedIssues),\r\n        typesDistribution: distribution(mappedIssues),\r\n        active: mappedIssues,\r\n        closeRate: closeRate({open: open, closed: closed})\r\n    };\r\n}\r\n\r\nconst ChartsContainer = connect(mapStateToProps)(Statistics);\r\nexport default ChartsContainer;","import React, { Component } from 'react';\nimport HeaderContainer from './HeaderContainer';\nimport ChartsContaner from './ChartsContaner';\n\nclass Dashboard extends Component {\n    static periods = [\"3\",\"6\",\"12\"];\n\n    render() {\n        return (\n            <div className=\"container-fluid\" id=\"dashboard\">\n                <HeaderContainer />\n                <ChartsContaner />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import Header from './../Common/Header';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { periodChanged } from './../../actions';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onPeriodChange: period => {\r\n            dispatch(periodChanged(period));\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.issues.period,\r\n        name: 'Issues'\r\n    }\r\n}\r\n\r\nconst IssuesContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\r\nexport default IssuesContainer;\r\n","import React from 'react';\r\n\r\nexport const AssigneeCellTemplate = (props) => {\r\n    if (!props.dataItem.assignee) {\r\n        return '';\r\n    }\r\n    let assignee = props.dataItem.assignee;\r\n     // eslint-disable-next-line\r\n    let template = <label><img src={assignee.avatar_url} style={{width: '30px', height: '30px'}} alt='img-circle' className='img-circle' />{assignee.login}</label>\r\n    return template;\r\n}\r\n\r\nexport const MilestoneCellTemplate = (props) => {\r\n    return props.dataItem.milestone ? props.dataItem.milestone.title : '';\r\n}\r\n\r\nexport const NumberCellTemplate = (props) => {\r\n    return <a href={props.dataItem.html_url}>#{props.dataItem.number}</a>\r\n}\r\n\r\nexport const TitleCellTemplate = (props) => {\r\n    let classes = [props.dataItem.state === 'open' ? 'issue-open': 'issue-closed', 'issue-status'].join(' ');\r\n    return <span><span className={classes}></span>{props.dataItem.title}</span>\r\n}\r\n\r\nexport const LabelCellTemplate = (props) => {\r\n    let colors = {\r\n        'SEV: LOW' : '#ff9800',\r\n        'SEV: MEDIUM' : '#ff5d2a',\r\n        'SEV: HIGH' : '#d50000',\r\n        'ENHANCEMENT' : '#00c853',\r\n        'FEATURE' : '#2e7d32',\r\n        'OTHER' : '#1ca8dd',\r\n        'PASSED QA' : '#57b45b',\r\n        'BUG' : '#cf3257',\r\n        'NEEDS QA' : '#bc007c',\r\n        'DOCUMENTATION' : '#455a64',\r\n        'DEMO' : '#673ab7',\r\n        'DELETED' : '#f44336',\r\n        'IN PROGRESS' : '#ffd600'\r\n    };\r\n    return props.dataItem.labels.map(label => {\r\n            let color = colors[label.name.toUpperCase()] || colors.OTHER;\r\n\r\n            return <span key={label.name} className=\"badge\" style={{ backgroundColor: color }}>\r\n                    {label.name}\r\n                   </span>\r\n    });\r\n}","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst Markdown = (props) => {\r\n    return <ReactMarkdown source={props.input} />\r\n}\r\nexport default Markdown;","import React from 'react';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport { LabelCellTemplate, TitleCellTemplate, NumberCellTemplate, MilestoneCellTemplate, AssigneeCellTemplate } from './IssuesGridCellTemplates.js';\nimport Markdown from './Markdown.js';\n\nconst IssuesGrid = (props) => {\n    return (\n        <Grid\n            data={props.issues}\n            detail={RowDetailComponent}\n            expandField=\"expanded\"\n            onExpandChange={props.onToggleExpand}\n            onPageChange={props.onIssuesPageChange}\n            total={props.total}\n            skip={props.skip}\n            scrollable={'none'}\n            pageable={true}\n            pageSize={props.pageSize}\n            style={{width: '100%', overflow: 'auto'}}\n        >\n            <Column field=\"number\" title=\"ID\" width=\"80px\" cell={cellWithTemplate(NumberCellTemplate)} />\n            <Column field=\"title\" title=\"Title\" cell={cellWithTemplate(TitleCellTemplate)} />\n            <Column field=\"labels\" title=\"Labels\" cell={cellWithTemplate(LabelCellTemplate)} />\n            <Column field=\"milestone\" title=\"Milestone\" width=\"200px\" cell={cellWithTemplate(MilestoneCellTemplate)} />\n            <Column field=\"assignee\" title=\"Assignee\" width=\"200px\" cell={cellWithTemplate(AssigneeCellTemplate)} />\n        </Grid>\n    );\n}\n\nconst RowDetailComponent = (props) => {\n    let dataItem = props.dataItem;\n    let badgeClass = dataItem.state === 'open' ? 'badge-success' : 'badge-danger';\n    return (\n        <div>\n            <div className=\"row my-4\">\n                <div className=\"col-sm-12\">\n                    <span className={`badge ${badgeClass}`}>{dataItem.state}</span>\n                    <h3 className=\"h1\">\n                        {dataItem.title}\n                        <span className=\"text-muted\">#{dataItem.number}</span>\n                    </h3>\n                </div>\n            </div>\n            <div className=\"row my-4\">\n                <div className=\"col-sm-2\">\n                    <span className=\"small d-block text-muted\">Created on</span>\n                    {dataItem.created_at}\n                </div>\n                {dataItem.closed_at !== null ?\n                    (<div className=\"col-sm-2\">\n                        <span className=\"small d-block text-muted\">Closed on</span>\n                        {dataItem.closed_at}\n                    </div>)\n                    : null}\n                <div className=\"col-sm-2\">\n                    <span className=\"small d-block text-muted\">Milestone</span>\n                    {dataItem.milestone ? dataItem.milestone.title : ''}\n                </div>\n                <div className=\"col-sm-2\">\n                    <span className=\"small d-block text-muted\">Author</span>\n                    {dataItem.user.login}\n                </div>\n                {dataItem.assignee !== null ?\n                    (<div className=\"col-sm-2\">\n                        <span className=\"small d-block text-muted\">Assignee</span>\n                        <img alt=\"assignee\" src={dataItem.assignee ? dataItem.assignee.avatar_url : undefined} style={{ 'width': '30px', 'height': '30px' }} className=\"img-circle\" />\n                        {dataItem.assignee ? dataItem.assignee.login : ''}\n                    </div>)\n                    : null}\n            </div>\n            <div className=\"row my-4\">\n                <div className=\"col-sm-2\">\n                    <h4 className=\"small text-muted\">Labels</h4>\n                    <LabelCellTemplate dataItem={dataItem} />\n                </div>\n                <div className=\"col-sm-8\">\n                    <h4 className=\"small text-muted\">Description</h4>\n                    <Markdown input={dataItem.body} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst cellWithTemplate = (Component) => {\n    return class extends React.Component {\n        render() {\n            return (<td><Component {...this.props} /></td>);\n        }\n    }\n}\n\nexport default IssuesGrid;\n","import IssuesGrid from './IssuesGrid.js';\n\nimport { connect } from 'react-redux';\nimport { issuesToggleExpand, issuesPageChange } from './../../actions';\n\nimport { issuesInRange } from './../../lib/issues';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onToggleExpand: (e) => dispatch(issuesToggleExpand(e.dataItem)),\n        onIssuesPageChange: (e) => dispatch(issuesPageChange(e.page))\n    };\n}\n\nconst mapStateToProps = (state) => {\n    let { skip, take } = state.issuesPaging;\n    let periodStart = state.issues.period.range.from;\n    let itemsInPeriod = state.issues.data.filter(issue => issuesInRange(issue, periodStart));\n    let items = itemsInPeriod.slice(skip, skip + take);\n    let total = itemsInPeriod.length;\n\n    return {\n        issues: items,\n        skip,\n        take,\n        total: total,\n        pageSize: take\n    }\n}\n\nconst IssuesGridContainer = connect(mapStateToProps, mapDispatchToProps)(IssuesGrid);\nexport default IssuesGridContainer;\n","import React, { Component } from 'react';\n\nimport IssuesContainer from './IssuesContainer';\nimport IssuesGridContainer from './IssuesGridContainer';\n\nclass IssuesIndex extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid\" id=\"issues\">\n                <IssuesContainer />\n                <IssuesGridContainer />\n            </div>\n        );\n    };\n}\n\nexport default IssuesIndex;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nclass Dashboard extends Component {\n    login = () => {\n        this.props.history.push('dashboard');\n    }\n    handleClick = (event) => {\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div id=\"login\" className=\"justify-content-center\">\n                <div className=\"signin-form col-xl-3\">\n                    <div className=\"k-card\">\n                        <div className=\"k-card-block\">\n                            <form className=\"k-form\">\n                                <h1 id=\"app-title\" className=\"mb-0\">Issues</h1>\n                                <h4 id=\"app-subtitle\" className=\"mb-4\">Sample Dashboard</h4>\n                                <hr className=\"k-hr\" />\n                                <div className=\"form-group mt-5\">\n                                    <InputLabel>Username</InputLabel>\n                                    <Input type=\"text\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <InputLabel>Password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                    <p className=\"text-xs-right small\">\n                                        <a href=\"/\" onClick={this.handleClick}>Forgot it?</a>\n                                    </p>\n                                </div>\n                                <div className=\"form-group mb-0 text-right\">\n                                    <Button color='primary' onClick={this.login}>Log in</Button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showAskDelete: false,\n            showProfileUpdate: false,\n            isWithOverlay: false\n        }\n\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n        this.onUpdateClick = this.onUpdateClick.bind(this);\n    }\n\n    componentDidMount() {\n        let url = this.props.gitUserApiUrl;\n        let options = this.props.gitOptions;\n\n        if (typeof (url) !== 'undefined') {\n            fetch(url, options)\n                .then(response => response.json())\n                .then(json => this.setState(json));\n        }\n    }\n\n    onUpdateClick() {\n        this.setState((prevState, props) => ({\n            showProfileUpdate: !prevState.showProfileUpdate,\n            isWithOverlay: !prevState.isWithOverlay\n        })\n        );\n\n    }\n\n    onDeleteClick() {\n        this.setState((prevState) => ({\n            showAskDelete: !prevState.showAskDelete,\n            isWithOverlay: !prevState.isWithOverlay\n        }));\n    }\n\n    render() {\n        return (\n            this.state &&\n            <div className=\"container-fluid\" id=\"profile\">\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <h4 className=\"d-block\">Account</h4>\n                            <h2>\n                                {this.state.login} - {this.state.name}\n                            </h2>\n                        </div>\n                        <div className=\"col-sm text-sm-right\">\n                            <Button variant=\"contained\">Sign out</Button>\n                        </div>\n                    </div>\n                </div>\n                <Dialog open={this.state.showAskDelete}>\n                    <DialogTitle >Are you sure you want to delete your account?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Account deletion cannot be undone!\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onDeleteClick}>Cancel</Button>\n                        <Button color=\"primary\" onClick={this.onDeleteClick}>Delete</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.showProfileUpdate}>\n                    <DialogTitle>Thank you</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Your profile has been successfully updated\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onUpdateClick} color='primary' type='flat'>OK</Button>\n                    </DialogActions>\n                </Dialog>\n                <div className=\"row\">\n                    <div className=\"col-md-7\">\n\n                        <div className=\"k-card\" id=\"profile\">\n                            <h2 className=\"k-card-header\">Public Profile</h2>\n                            <div className=\"k-card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-3 text-xs-center\">\n                                        {this.state.avatar_url\n                                            ? <img src={this.state.avatar_url} alt=\"Avatar URL\" style={{ 'maxWidth': '100%' }} className=\"img-circle img-large\" />\n                                            : <span className=\"k-icon k-i-loading\" />}\n                                    </div>\n                                    <div className=\"col-md-9\">\n                                        <div className=\"form-group\">\n                                            <InputLabel >Username</InputLabel>\n                                            <Input type=\"text\" id=\"username\" className=\"form-control\" defaultValue={this.state.login} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Name</InputLabel>\n                                            <Input type=\"text\" id=\"name\" className=\"form-control\" defaultValue={this.state.name} ref={(button) => {\n                                                this.anchor = button;\n                                            }} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Email</InputLabel>\n                                            <Input type=\"email\" id=\"email\" className=\"form-control\" defaultValue={this.state.email} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel className=\"form-check-InputLabel h6\">\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox defaultChecked color=\"primary\" />\n                                                    }\n                                                    label=\"Keep my email address private\"\n                                                />\n                                            </InputLabel>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Company</InputLabel>\n                                            <Input type=\"text\" id=\"company\" className=\"form-control\" defaultValue={this.state.company} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <InputLabel >Location</InputLabel>\n                                            <Input type=\"text\" id=\"location\" className=\"form-control\" defaultValue={this.state.location} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <Button variant=\"contained\" onClick={this.onUpdateClick}>Update profile</Button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=\"k-card\" id=\"delete-account\">\n                            <h2 className=\"k-card-header\">Delete Account</h2>\n                            <div className=\"k-card-body\">\n                                <p>You will immediately lose access to your repositories and all other information associated with your account.\n                                <strong>This cannot be undone!</strong>\n                                </p>\n                                <Button variant=\"contained\" onClick={this.onDeleteClick}>Delete Account</Button>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"col-md-5\">\n                        <div className=\"k-card\" id=\"notifications\">\n                            <h2 className=\"k-card-header\">Notifications</h2>\n                            <div className=\"k-card-body\">\n                                <h4 >Automatically watch repositories?</h4>\n                                <h3 className=\"text-muted\">When you are given push access to a repository, automatically receive notifications for it.</h3>\n                                <p>\n                                    <Switch color=\"primary\"></Switch>\n                                </p>\n                                <h4 >Receive updates to any conversations via email?</h4>\n                                <p>\n                                    <Switch defaultChecked={true} color=\"primary\"></Switch>\n                                </p>\n                                <h4 >Receive updates to any repositories via email?</h4>\n                                <p>\n                                    <Switch defaultChecked={true} color=\"primary\"></Switch>\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"k-card\" id=\"password\">\n                            <h2 className=\"k-card-header\">Update password</h2>\n                            <div className=\"k-card-body\">\n                                <div className=\"form-group\">\n                                    <InputLabel >Old password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <InputLabel >New password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <InputLabel >Confirm password</InputLabel>\n                                    <Input type=\"password\" className=\"form-control\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <Button variant=\"contained\">Change password</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { NavLink, Route, Redirect } from 'react-router-dom';\n\nimport Dashboard from '../Dashboard';\nimport IssuesIndex from '../Issues';\nimport Signin from '../Signin';\nimport Profile from '../Profile';\nimport { withGithubUser, withGithubApi } from '../Github';\n\nclass MainMenu extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            year: (new Date()).getFullYear()\n        }\n    }\n\n    render() {\n        const notSignIn = this.props.location.pathname !== '/signin'\n        const navbarClassName = 'sticky-top material-color text-white py-3 py-sm-5 k-vbox shadow col-xl-2 d-xl-flex '\n            + (this.props.showNav ? 'show' : 'hide');\n\n        return (\n            <div id=\"app\" className=\"app\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {notSignIn && (<div id=\"nav\" className={navbarClassName}>\n                            <div className=\"container\">\n                                <h1 id=\"app-title\" className=\"mb-0\">Issues</h1>\n                                <h4 id=\"app-subtitle\" className=\"mb-4\">Sample Dashboard</h4>\n                                <hr className=\"k-hr\" />\n                                <h4 className=\"mt-3 mt-sm-5\">Project</h4>\n                                <ul className=\"nav nav-pills flex-column\">\n                                    <li className=\"nav-item\" id=\"dashbaord\">\n                                        <NavLink to=\"/dashboard\" className=\"nav-link\" activeClassName=\"active\">Dashboard</NavLink>\n                                    </li>\n                                    <li className=\"nav-item\" id=\"issues\">\n                                        <NavLink to=\"/issues\" className=\"nav-link\" activeClassName=\"active\">Issues</NavLink>\n                                    </li>\n                                </ul>\n                                <h4 className=\"mt-3 mt-sm-5\">Account</h4>\n                                <ul className=\"nav nav-pills flex-column\">\n                                    <li className=\"nav-item\" id=\"profile\">\n                                        <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">My Profile</NavLink>\n                                    </li>\n                                    <li className=\"nav-item\" id=\"signout\">\n                                        <NavLink to=\"/signin\" className=\"nav-link\" activeClassName=\"active\">Sign Out</NavLink>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className=\"container mt-sm-auto\">\n                                <hr className=\"k-flex k-hr k-hr-bottom\" />\n                                <div id=\"copy\">\n                                    <p>Copyright &copy; {this.state.year},<br /><a href=\"http://www.progress.com\">Progress Software Corporation</a> and/or its subsidiaries or affiliates.</p>\n                                    <p>All Rights Reserved.</p>\n                                </div>\n                            </div>\n                        </div>)}\n                        <div className={'content-wrapper col'}>\n                            <Redirect from=\"/\" to=\"dashboard\" />\n                            <Route path=\"/dashboard\" component={Dashboard} />\n                            <Route path=\"/issues\" component={IssuesIndex} />\n                            <Route path=\"/profile\" component={withGithubApi(withGithubUser(Profile))} />\n                            <Route path=\"/signin\" component={Signin} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainMenu","import React, { Component } from 'react'\r\n\r\nexport const withGithubApi = (ApiComponent) => {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            let baseUrl = 'https://api.github.com/repos/telerik/kendo-ui-core/issues';\r\n            let headers = {\r\n                // Generate your own token through\r\n                // https://github.com/settings/tokens\r\n\r\n                'Authorization': \"token b95116792cba5a8169a1ec10640d8c16535c6419\"\r\n            };\r\n\r\n            let options = { method: 'GET', accept: 'application/json', headers: headers };\r\n            this.state = {\r\n                gitOptions: options,\r\n                gitBaseUrl: baseUrl,\r\n                gitUsername: 'simonssspirit'\r\n            };\r\n        }\r\n\r\n        render() {\r\n            return <ApiComponent {...this.state} {...this.props} />\r\n        }\r\n    }\r\n}\r\n\r\nexport const withGithubUser = (ApiComponent) => {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                gitUserApiUrl: `https://api.github.com/users/${this.props.gitUsername}`\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <ApiComponent {...this.state} {...this.props} />\r\n        }\r\n    }\r\n};\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { issuesFetched, issuesReceived, issuesDetails } from './actions';\nimport MainMenu from './components/MainMenu';\nimport { classNames } from '@progress/kendo-react-common';\n\nconst baseUrl = 'https://api.github.com/repos/telerik/kendo-ui-core/issues';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      showNav: false\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    let dispatcher = (data) => {\n      this.setState({ loading: false });\n      dispatch(issuesReceived(data));\n      dispatch(issuesDetails(data));\n    };\n\n    dispatch(issuesFetched());\n\n    return Promise.all(this.getPageFetchers(10))\n      .then(responses => responses.map(res => res.json()))\n      .then(issues => Promise.all(issues))\n      /* response is array of arrays. Each page is in an array */\n      .then(arraysOfData => arraysOfData.reduce((prev, current) => prev.concat(current)))\n      .then(result => dispatcher(result));\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.pathname !== this.props.location.pathname && this.state.showNav) {\n      this.setState({ showNav: false });\n    }\n  }\n\n  getPageFetchers(numberOfPages) {\n    let fetches = [];\n    let headers = {\n      // Generate your own token through\n      // https://github.com/settings/tokens\n\n      'Authorization': \"token 8d52e8992a52f3fdba0bef8df1fe2ea096c64fb4\"\n    };\n\n    let options = { method: 'GET', accept: 'application/json', headers: headers };\n\n    for (let page = 1; page <= numberOfPages; page++) {\n      let url = baseUrl + `?state=all&page=${page}&per_page=50`;\n      fetches.push(fetch(url, options));\n    }\n\n    return fetches;\n  }\n\n  handleClick = () => {\n    this.setState({ showNav: !this.state.showNav })\n  }\n\n  render() {\n    const showNav = this.state.showNav;\n    const className = classNames('navbar sticky-top bg-white d-xl-none', {\n      'k-shadow': !showNav\n    });\n\n    return (\n      <React.Fragment>\n        <div className={className}>\n          <div onClick={this.handleClick} className={showNav ? 'open' : 'closed'} id=\"nav-icon\" data-toggle=\"collapse\" data-target=\"#side-nav\" aria-controls=\"side-nav\" >\n            {/* Using dummy span elements for animating the 'hamburger' menu */}\n            <span />\n            <span />\n            <span />\n            <span />\n          </div>\n        </div>\n        {this.state.loading ? <span className=\"k-icon k-i-loading\"></span> : <MainMenu {...this.props} showNav={showNav} />}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect()(App);\n","let getRangeStart = (months) => {\r\n    let since = new Date();\r\n    let parsedMonths = parseInt(months,10)\r\n    since.setMonth(since.getMonth() - parsedMonths);\r\n    return since;\r\n}\r\n\r\nlet getState = (months) => {\r\n    return {\r\n        period: months,\r\n        range: {\r\n            to: new Date(),\r\n            from: getRangeStart(months)\r\n        }\r\n    };\r\n}\r\n\r\nlet initialState = {\r\n    data: [],\r\n    period:getState(3),\r\n    initialIssues: []\r\n};\r\n\r\n\r\nexport const issues = (state = initialState, action) => {\r\n    if (action.type === 'ISSUES_RECEIVED') {\r\n        let initialIssues = action.payload.filter(issue => issue.pull_request ? false : true);\r\n        let issues = action.payload.filter(issue => !issue.pull_request && new Date(issue.created_at) > new Date(state.period.range.from) ? true : false);\r\n        let newState = Object.assign({ period: state.period, data: issues, initialIssues: initialIssues}, {});\r\n        return newState;\r\n    } else if(action.type ==='ISSUES_COLLAPSED') {\r\n        let issues = action.payload;\r\n        let newState = state;\r\n        newState.data = issues.map(issue => { let iss = Object.assign({}, issue); iss.expanded = false; return iss; });\r\n        return newState;\r\n    } else if (action.type === 'ISSUES_TOGGLE_EXPAND') {\r\n        let dataItem = action.payload;\r\n        let index = state.data.findIndex(i => i.number === dataItem.number);\r\n        let clonedDataItem = Object.assign({}, state.data[index]);\r\n        clonedDataItem.expanded = !dataItem.expanded;\r\n\r\n        let newIssues = [\r\n            ...state.data.slice(0, index),\r\n            clonedDataItem,\r\n            ...state.data.slice(index + 1)\r\n        ];\r\n        let newState = Object.assign({ period: state.period, data: newIssues, initialIssues: state.initialIssues}, {});\r\n        return newState;\r\n        } else if (action.type === 'ISSUES_PERIOD_CHANGED') {\r\n        let newPeriod = getState(action.payload.period)\r\n        let initialIssues = state.initialIssues\r\n        let newIssues = initialIssues.filter(issue => new Date(issue.created_at) > new Date(newPeriod.range.from)  ? true : false);;\r\n        let newState = Object.assign({ period: newPeriod, data: newIssues, initialIssues: state.initialIssues}, {});\r\n\r\n        return newState\r\n    }\r\n    \r\n    else {\r\n        return state;\r\n    }\r\n};","let initialState = {\n    skip:0,\n    take: 10\n}\n\nexport const issuesPaging = (state = initialState, action) => {\n    if (action.type === 'ISSUES_PAGE_CHANGE') {\n        let newState = { skip: action.skip, take: action.take, pageSize: action.take }\n        return newState\n    } else {\n        return state;\n    }\n}\n","import { combineReducers } from 'redux';\r\nimport { issues } from './issues';\r\nimport { issuesPaging } from './issuesPaging';\r\n\r\nexport const issuesDashboard = combineReducers({issues, issuesPaging});","import { createStore } from \"redux\";\r\nimport { issuesDashboard } from '../reducers';\r\n\r\nexport const issuesStore = createStore(issuesDashboard, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom';\nimport App from './App.jsx';\nimport { Ripple } from '@progress/kendo-react-ripple';\n\nimport './index.scss';\n\nimport { issuesStore } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst AppWithRouting = withRouter(App);\n\nReactDOM.render((\n    <Provider store={issuesStore}>\n        <Ripple>\n            <HashRouter basename={process.env.PUBLIC_URL}>\n                <AppWithRouting />\n            </HashRouter>\n        </Ripple>\n    </Provider>\n    ),\n    document.getElementById('root')\n);\n"],"sourceRoot":""}